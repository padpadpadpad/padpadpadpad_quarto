{
  "hash": "c1b9c10b586f0fcf66d0778eb0b67c67",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Accessing PadLabNas\ndescription: Details for how to access and use the long-term file storage system PadLabNas.\nauthor: Daniel Padfield\ndate: 07 07 2025\ndate-modified: last-modified\ndate-format: long\ncategories:\n  - computational\nexecute: \n  eval: false\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-overflow: wrap\n    standalone: true\n    embed-resources: true\n  pdf:\n    toc: true\n    toc-depth: 5\n    fontsize: 14pt\n    code-overflow: wrap\n    keep-tex: false\n    include-in-header: \n       text: |\n         \\usepackage{fvextra}\n         \\DefineVerbatimEnvironment{Highlighting}{Verbatim}{breaklines,commandchars=\\\\\\{\\}}\n         \\DefineVerbatimEnvironment{OutputCode}{Verbatim}{breaklines,commandchars=\\\\\\{\\}}\n  \n  docx:\n    toc: true\n    toc-depth: 5\n    code-overflow: wrap\n---\n\n# An introduction to using PadLabNas\n\nPadLabNas is a Network Attached Storage designed to simplify how members of the Buckling Collaborative backup, archive, and share their data. It lives in Dan Padfield’s office.\n\nLog in to PadLabNas from <https://padpadpadpad.de6.quickconnect.to/>. Request access by contacting Daniel Padfield at [d.padfield@exeter.ac.uk](mailto:d.padfield@exeter.ac.uk) or messaging him on Microsoft Teams.\n\n## General Rules\n\n- Set schedule settings for syncs to exclude 8-5 Monday to Friday so it does not read/write during work hours when people are in the office.\n- Every folder within **BucklingCollaborative** has to have a README describing the folder.\n- If moving files between **PadLabNas** and another remote server, ssh into **PadLabNas**. If you try using your local machine as a go-between for two remotes using **rclone**, it will download the files to your machine and re-upload them.\n- When using **rclone**, make sure to either use [**screen**](https://linuxize.com/post/how-to-use-linux-screen/) or [**tmux**](https://tmuxcheatsheet.com/) to allow the upload and download to continue even if the Terminal window closes.\n\n## Folder and file names {#sec-naming}\n\n- How you name folders within your home folder is up to you, as long as it is consistent.\n- In **BucklingCollaborative** name folders with underscores. I recommend naming folders by the year of the project and underscore with a summary title of the project and the initials of the main researcher on the project. For example: “**2025_doseresponseAMR_ZE**”\n\n## Folder structure\n\n- You can view all files you have access to on the Synology by using the **File Station** application.\n- Each member has their own home space, which can be seen in **home**, you can see everyone else’s in **homes.**\n- Put your own personal files in your space, but any finished projects and sequencing goes into **BucklingCollaborative**.\n- Within **Buckling Collaborative**, there are some legacy folders which store previous projects that were backed up in a variety of places.\n  - **buckling** stores\n  - **padfield-lab** stores\n  - **1840-cmh-bacteria-radiations** stores\n\n## Permitted uses of PadLabNas\n\n### Back-up OneDrive (or other storage service) using CloudSync\n\n- **CloudSync** is an application on the virtual Desktop of PadLabNas. If not, you can access it on Package Centre.\n- Once there set up your OneDrive account for the Synology,\n  - I use Bidirectional Sync Direction, meaning files go from the NAS to your OneDrive, and _vice versa_.\n  - Set the local path to be **one_drive** within your profile area (e.g. dpadfield/one_drive). Create the **one_drive** folder if needed.\n\n### Back-up data\n\n- Back up each project into its separate folder in BucklingCollaborative.\n- Ensure it has a README.\n  - For sequencing, a [template](https://universityofexeteruk.sharepoint.com/:w:/r/sites/BucklingMassive/Shared%20Documents/sequencing_projects/README_sequencing_template.docx?d=w71b781ed92654a9a9576206fcc2f155f&csf=1&web=1&e=zrgeFg) exists on the BucklingMassive Sharepoint.\n  - For other projects you can see good advice [here](https://research-hub.auckland.ac.nz/managing-research-data/organising-and-describing-data/research-data-readme) and [here](https://dataworks.faseb.org/helpdesk/kb/a-guide-to-using-dataset-readme-files). Essentially describe the dataset and each file in the folder and what it does. An example of one of my projects is [here](https://github.com/padpadpadpad/myxo_diversification).\n- Make sure the folder is named consistently (see @sec-naming).\n- Depending on where the sequencing is, you may download it in several ways (see below).\n\n## Moving files to and from PadLabNas\n\n### File Station\n\n**Drag and drop** using access from <https://padpadpadpad.de6.quickconnect.to/>. With **File Station** you can add, move, and rename folders, as well as deleting files.\n\n### Download Station\n\nUse the application **Download Station** to download files from third party providers when they give a download link.\n\n### Cloud Sync\n\nUse the application **Cloud Sync** to sync your OneDrive or other cloud storage system regularly to the NAS.\n\n### rclone\n\nProgrammatically move files using **rclone**. [**rclone**](https://rclone.org/) is useful to move individual files and folders between servers or to and from your local machine. If moving to or from your local machine, this can be done on the command line, if moving to or from PadLabNas to another server (e.g. Athena, Carson, Isca, RStudio), you will need to SSH into PadLabNas.\n\nFirst you will need to set up **rclone**. Open your terminal. On both your local machine and the PadLabNas (if needed), you need to create a _config_ file which stores the details of the remotes you want to move files between. On your local machine, I recommend adding **PadLabNas** and any of the other servers you use. For **PadLabNas** I recommend adding other servers as you need to.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ssh in PadLabNas (if needed)\nssh USERNAME@ipaddresshere -p 22\n\n# Check _rclone_ is installed\nrclone –version\n# if not install rclone (on your local machine)\n\n# add a remote\nrclone config\n```\n:::\n\n\nThis will start an interactive command in your terminal to add a new remote. To set this up:\n\n1. When asked for _Storage>_ choose **ssh/sftp (48)**.\n2. When asked for _host>_ add the address of the remote (e.g. **the ip address**)\n3. When asked for _user>_ use the user for that remote (e.g. **dpadfield** or **dp415**)\n4. When asked for _port>_ use **22**\n5. When asked for _password>_ type your password for that server.\n6. All the other options can be left empty or as the default.\n\nTo be able to move files to and from PadLabNas easily, we need to manually edit the config file. First we need to know where the config file is.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# local rclone config file\nrclone config file\n```\n:::\n\n\nWill tell you where your config file is stored. Open it. In the **\\[PadLabNas\\]** section add **path_override = @/volume1/** on a new line. Save and close the file.\n\nWe are now ready to move folders and files programmitically. Some useful usecases are below. [rclone](https://rclone.org/docs/) docs are useful for writing commands. ChatGPT or Claude AI may also be useful for this. Some example commands are below. Adding _–dry-run_ to your copy commands will give you output of what _rclone copy_ will do without moving any files.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# list available remotes\nrclone listremotes\n\n# view directories of a remote_\nrclone lsd PadLabNas:\n\n# move to where you want to move the folder too\ncd ~/Downloads\n\n# run a test download using copy\n# downloads test from PadLabNas into your local machine to a folder. Adding /test at the end of the destination creates the folder on your machine._\nrclone copy PadLabNas:BucklingCollaborative/test ~/Downloads/test --progress\n\n# move test onto PadLabNas\nrclone copy ~/Downloads/test --progress PadLabNas:BucklingCollaborative/test\n```\n:::\n\n\n### Share folders with a Share Link\n\nSometimes you may want to share a folder with people who are not signed up to PadLabNas. To share a folder, Right Click on the folder in **File Station** and click Share. Then click Save. You can then share that link with anyone you want and they can Download it through their browser. **NOTE the recipient still needs to be on the University VPN for this to work.**\n\nIf you want them to be able to download it through a server (e.g. RStudio server) or programmatically generally, the process is slightly more involved. You can download an example script for this [here.](https://universityofexeteruk.sharepoint.com/:u:/s/BucklingMassive/EVV5lfgYBE9DiFTg4dVlY3gBYfHd4I5nefPi85Bsnjccyw?e=Ce4wLQ), but the code is also below. **If it is a folder, make sure it is compressed to a .zip file by Right Click Compress to .zip**. Create a Share Link as above. Send Share link with recipient. \n\nThe following code is for the recipient. Open the Terminal Client.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# check curl is installed\ncurl --version\n\n# Move into correct directory to download the file or zip folder.  \ncd ~/Downloads\n\n# Define Sharing Link, NAS address, and file name. You may need to change these bits.\n\n# sharing link_\nsharing_link=https://gofile.me/7EFXM/HwTkOww2x\n\n# PadLabNAS address\nnas=https://padlabnas.synology.me:5001\n\n# filename\nfilename=\"test.zip\"\n\n#Create a file that allows curl to talk to the Sharing Link properly. We call it cookies.txt. You can just copy and paste this code.\ncurl -k -c cookies.txt -b cookies.txt \"$nas/sharing/$(basename \"$sharing_link\")\"\n\n#Download the file using curl and remove cookies.txt. Just copy and paste this code.\ncurl -k -b cookies.txt -L -O \"$nas/fsdownload/$(basename \"$sharing_link\")/$filename\"\n\n# remove cookies file_\nrm cookies.txt\n\n# Unzip the folder if you want to!\nunzip \"$filename\" -d ~/Downloads\n```\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}