{
  "hash": "e39307733dbceb5dd8ff97895c45e009",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Setting SSH access for a non-admin user on Synology\ndescription: |\n  Step-by-step instructions to allow a user to have SSH access to a Synology NAS.\nauthor: Daniel Padfield\ndate: \"07/11/2025\"\ndate-modified: last-modified\ncategories: \n  - Synology\n  - bash\nimage: \"\"\nexecute:\n  message: false\n  warning: false\n  fig.align: \"center\"\n  eval: false\n---\n\n# Outline\n\nThis is a step-by-step guide to allowing a non-admin user to have SSH access to a Synology NAS. Synology - and many others - think this is a security risk and you should not do it. Fair enough. You can make that decision yourself.\n\nBut if you do want to do it, here are the steps that worked for me. They were a hack between [this] blog post and the output from ChatGPT, both of which had partial errors or missing bits.\n\n**This was done on a Synology DS423+ on DSM 7.2.2-72806 Update 3.**\n\n# Steps\n\nThis example has a user - called **test_user** - that you want to give SSH access to. And that you have enabled SSH access on the Synology NAS so you - as an admin user, can SSH into it.\n\nTo Enable SSH, you can do **Control Panel -> Terminal and SNMP -> tick Enable SSH service**.\n\nFirst SSH into the NAS. You can then enter root access by using `sudo -i` and re-entering your password.\n\n```{bash login}\n\n# firstly login to the server using the command\nssh user@ipaddress -p XX\n\n# get root access\nsudo -i\n```\n\nNext, we need to edit **/etc/passwd**. To do this we used **vi**. I hate **vi**. Key things for using **vi** are:\n\n- `i` to enter insert mode where you edit things.\n- `Esc` to exit insert mode.\n- `:wq` to save the changes and quit.\n- `:q!` to quit without saving changes. **I used this as save changes for about twenty minutes.**\n\nWhen you go into `insert` mode, find the user you want to give SSH access to, and change **/sbin/nologin** to **/bin/sh**.\n\n```{bash}\n\n# edit the file\nvi /etc/passwd\n# i to enter insert mode\n# :wq to save and exit\n```\n\nOnce you have copy the file **\\$HOME/.profile** **/var/services/homes/test_user** and edit it again. This time,change the value of **\\$HOME** to **/var/services/homes/test_user**.\n\n```{bash}\n\n# copy the file\ncp $HOME /.profile/var/services/homes/test_user\n\n# edit the file\nvi /var/services/homes/test_user/.profile\n# i to enter insert mode\n# :wq to save and exit\n```\n\nYou can now exit root access by typing `exit`. And exit the SSH session by typing `exit` again.\n\nVoila, that user should now have SSH access to the Synology NAS.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}