<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>DanPadLab</title>
<link>https://padpadpadpad.netlify.app/posts.html</link>
<atom:link href="https://padpadpadpad.netlify.app/posts.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.5.57</generator>
<lastBuildDate>Fri, 14 Feb 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>Wychwood Festival License Review</title>
  <dc:creator>Daniel Padfield</dc:creator>
  <link>https://padpadpadpad.netlify.app/posts/2025-02-14-wychwood-festival-license-review/</link>
  <description><![CDATA[ 





<section id="outline" class="level2">
<h2 class="anchored" data-anchor-id="outline">Outline</h2>
<p>Wychwood festival is a family friendly music festival in Cheltenham at the racecourse. In 2024 the festival was a public nuisance for the residents of Park Lane, Shaw Green Lane (and Prestbury more generally). In 2024, Wychwood changed the position of the stages and since 2023 they are in the southeast corner of the helipad field - as close as could be to the houses on Park Lane and Bowbridge Lane.</p>
<p>There were 23 complaints made about the noise, but currently the festival plans to keep the stages in the same area of the field this year. However, I applied to the council for a review of the license and this was granted. Consequently, there is a current review of the license on public nuisance grounds. This is your opportunity to let the council know how the festival impacted you, for better or for worse.</p>
<p>The license review can be accessed here <a href="https://publicaccess.cheltenham.gov.uk/online-applications/licencingApplicationDetails.do?activeTab=summary&amp;keyVal=SR98IWEL0N100">here</a>. You can add your comments in the comments tab of that page.</p>
</section>
<section id="tldr" class="level2">
<h2 class="anchored" data-anchor-id="tldr">TLDR</h2>
<p>I just want the stages at Wychwood to be moved to the other end of the helifield, and the stages should face towards the northeast so that music goes out towards where there are mainly fields and an industrial estate.</p>
</section>
<section id="reasons-for-this-post" class="level2">
<h2 class="anchored" data-anchor-id="reasons-for-this-post">Reasons for this post</h2>
<ol type="1">
<li>The application I wrote to the council to review the license is not publicly available, so I thought I would make it so here.</li>
<li>The comments on the License portal (linked in the outline) are available to read but I cannot submit the whole application or an explanation of the data collected by Wychwood and their Acoustic Consultants from 2023 and 2024.</li>
<li>I want an open discussion from residents about the impact of Wychwood last year. I want you to comment whether you loved or hated the noise, but this is your main chance to make your opinion known.</li>
</ol>
</section>
<section id="the-application" class="level2">
<h2 class="anchored" data-anchor-id="the-application">The application</h2>
<p>The Wychwood festival in 2024 was a public nuisance for the residents of Park Lane, Shaw Green Lane (and Prestbury more generally). In 2024, Wychwood changed the position of the stages and since 2023 they are in the southeast corner of the helipad field - as close as could be to the houses on Park Lane and Bowbridge Lane. This resulted in a doubling of the noise level and led to sustained breaches of the terms of their license. The increased noise resulted in 23 complaints in 2024 that were mainly about the noise. The noise pollution from the event in Prestbury was extreme. We could feel vibrations inside our homes regularly throughout due to the low frequency noise and the music could easily be heard as far away as Pittville Park and even Springbank (approximately 3 miles away). Not only could we not enjoy time outside in the garden throughout the 3 days from the hours of midday all the way until 10:30pm when the music stopped, but we were also adversely affected by it inside our homes, even with all the doors and windows closed. <strong>The noise levels were too high and too sustained</strong>.</p>
<p><strong>The conditions of the license should explicitly state the positioning of the stages to be as far away from residential areas (e.g.&nbsp;Park Lane and Shaw Green Lane, Prestbury) as possible, and for the direction of the stages to face away from these same areas.</strong> Moving the stages to be as far away from residents as possible is the simplest and most effective way of making sure Wychwood provide the best festival experience while minimising public nuisance and protecting public health. This change would also go some way to future proofing the festival in terms of public nuisance related to sound. Finally, a reduction in the absolute noise level from 60dB to 55dB would be more in line with the regulations upon which the license was designed and the Wychwood organiser’s own noise management plan. <strong>These differences in sound are large, as sound is measured on a log scale, the difference between 55dB and 60dB represents a tripling of the sound intensity.</strong></p>
<p>In the license conditions for Wychwood the Public Nuisance heading states:</p>
<blockquote class="blockquote">
<ol start="3" type="1">
<li>The control limits set at the mixer position shall be adequate to ensure that a Target Music Noise Level (MNL) of 55dB LAeq (15mins) measured at one metre from the facade of noise sensitive premises shall be achieved between the hours of 0900 hrs to 2300 hrs. Where the Target Level of 55dB LAeq(15mins) is exceeded then suitable and appropriate action shall be taken to meet this Target Level. An Absolute Music Noise Level (MNL) Level of 60dB LAeq (15mins) measured at one metre from the facade of noise sensitive premises shall not be exceeded between the hours of 0900 hrs to 2300 hrs. The noise levels shall be monitored at noise sensitive locations agreed with the Council. (Note: MNL and noise sensitive properties are as defined in Code of Practice on Environmental Noise Control at Concerts Noise Council 1995)..</li>
</ol>
</blockquote>
<p>This wording is clear. If the noise goes above 55dB, you should bring it back down to 55dB. This Target Level is consistently referred to in the noise management plans as well. I was given the Noise Observation Reports taken by the Acoustic Consultants during the festival, which shows that in 2024 <strong>36% of all measurements were above the Target Music Noise Level</strong>, in clear breach of the license as it is written.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/2025-02-14-wychwood-festival-license-review/Wychwood_noise.png" class="img-fluid figure-img"></p>
<figcaption>Figure 1. Noise measurements taken around Wychwood festivals on each day in 2023 and 2024. Noise measurements are averaged over 5 or 15 minutes, so values over 55dB (in red) are measurements above the Target Level and in breach of the license as written.</figcaption>
</figure>
</div>
<p>Moreover, there are many instances in the post event noise report where comments suggest changes to the sound system were made, but no change in the noise was observed. For example, on Friday at 18:40 the noise level was 60dB on Shaw Green Lane and “<em>3d at 50hz taken out of both stages</em>”. However, at 19:00 another measurement was taken on Shaw Green Lane and the measurement remained at 60dB. This is in clear breach of the license.</p>
<p>Environmental Health do not think this is a breach of the license. In an email, they wrote to me that “<em>It is expected that at times the target level is surpassed, and often leeway is provided to allow for this to occur for certain performances.</em>”. This would mean whole sets could breach the Target Music Level. However, this is not in the license. They also told me that the previous comment was “<em>in relation to the departments application of such license conditions and is not taken from the license.</em>”. <strong>You cannot simply interpret conditions in the license differently to how they are written.</strong></p>
<p>The absolute level of 60dB for the current Wychwood license was set on guidance from the National Code of Practice on Environmental Noise Controls at Concerts. Table 1 of that document specifies guidelines for urban and rural venues based on the number of event days that happen per year. For all venues – if there are more than 4 concert days per calendar year, per venue, the guideline states:</p>
<blockquote class="blockquote">
<p>The music noise levels should not exceed the background noise level by more than 15dB(A) over a 15-minute period.</p>
</blockquote>
<p>In 2024 there were at least 7 concert days including Wychwood, Nile Rogers, and Summertime Live, at the racecourse on the helicopter fields. Consequently, <strong>the limits of Wychwood should be reduced as recommended by the guidelines upon which the original license was given.</strong></p>
<p>The National Code of Practice also warns against relying solely on measurements of dB. Point 3.4 states:</p>
<blockquote class="blockquote">
<p>Assessment of noise in terms of dB(A) is very convenient but it can underestimate the intrusiveness of low frequency noise. Furthermore, low frequency noise can be very noticeable indoors. Thus, even if the dB(A) guideline is being met, unreasonable disturbance may be occurring because of the low frequency noise. With certain types of events, therefore, it may be necessary to set an additional criterion in terms of low frequency noise, or apply additional control conditions.</p>
</blockquote>
<p>As stated above, we felt vibrations in our house on Park Lane throughout the weekend due to this low frequency noise. We believe the easiest way to solve this is to move the stage much further away from the Park Lane end of the helicopter field.</p>
<p>Overall, Wychwood 2024 breached the terms of its license regularly, and modifications should be made to prevent public nuisance. Environmental Health are not applying the license as it is written, and this caused significant public nuisance in 2024 that should not be allowed to happen again. I do not want the festival to stop, I just want the stages to be moved to the other end of the helifield, and stages should face towards the northeast so that music goes out towards where there are mainly fields and an industrial estate.</p>
<p>I thank members of the Environmental Health team for providing us with the noise Management Plan and Noise Observation Reports for Wychwood, and for answering all our questions patiently and punctually. I am doing this to protect the health of my partner Sophia Galpin. If you would like to learn about how severely ill she is, and why this matters so much to me, you can read more about her <a href="https://padpadpadpad.netlify.app/posts/caring_for_soph/">here</a>.</p>


</section>

 ]]></description>
  <guid>https://padpadpadpad.netlify.app/posts/2025-02-14-wychwood-festival-license-review/</guid>
  <pubDate>Fri, 14 Feb 2025 00:00:00 GMT</pubDate>
  <media:content url="https://padpadpadpad.netlify.app/posts/2025-02-14-wychwood-festival-license-review/preview.png" medium="image" type="image/png" height="122" width="144"/>
</item>
<item>
  <title>Caring for someone with severe ME</title>
  <dc:creator>Daniel Padfield</dc:creator>
  <link>https://padpadpadpad.netlify.app/posts/caring_for_soph/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>You may know me. You may not. I am Daniel Padfield, a microbial ecologist and carer. I live in Cornwall and my partner of 11 years is called Sophia Galpin. She lives in Cheltenham with her family and has very severe ME. She has been getting steadily worse for around 10 years, and is now bedbound in constant neuropathic pain. I visit every three weeks for 3 to 4 days.</p>
<p>The pain and suffering she gets through is very difficult to describe, but I have decided to try and document each visit in some, small way. This is my account, of how it feels to watch her, of how I see her suffering. This is my account because she cannot tell the world about what she is going through. Right now she cannot speak. Cannot text in full sentences. Cannot write.</p>
<p><em>A warning that this set of posts are going to be very sad.</em></p>
<section id="there-and-back-again-and-the-dreaded-chat-about-dates." class="level2">
<h2 class="anchored" data-anchor-id="there-and-back-again-and-the-dreaded-chat-about-dates.">19/05/2025 There and back again and the dreaded chat about dates.</h2>
<p>For my career, I am a sort-of-ok scientist. I study how bacteria and other tiny organisms interact with each other, and how they respond to changes in their environment, like climate warming. It is a pretty sweet gig. I get to learn new things, teach people those things, and work with nice and mega intelligent people. It is also super flexible at the moment, and I am super grateful for the unending support of my work colleagues that has allowed my career to continue - and go surprisingly (to me at least) well.However, I have chronic imposter syndrome and anxiety about my productivity and worry about my lack of enthusiasm, which inevitably bleeds into my work-life from the depression and anxiety that comes from caring for Soph. Somehow reading papers and doing science does not feel like it matters when the day before I was holding a cup for my partner to eat soup.</p>
<p>One really hard thing is planning. Any form of planning. I try to visit Soph every third week, but this can change if I get ill, if Karen, John, or myseld have something planned. And before each visit I self-isolate for 5 days. This makes it very hard to plan for work, or to plan holidays. It has also become nearly impossible to discuss visit plans with Soph, such that it is much easier if we can keep to a regular schedule. As such, Karen and I sit down with the calendar most visits and discuss dates for the next few visits. It feels so cold and transactional, and it is horrible to do it without Soph. Coupled to this, the amount of travelling I do on the M5 to and from Soph’s (its about 4 hours each way) means when I am in Cornwall I do not want to leave. And I feel so exhausted balancing caring for Soph, the toll it takes on me, and work that I rarely have capacity for anything extra. Ultimately I live day-to-day and week-to-week, trying to keep my head above water.</p>
<p>I know this way of living isn’t really compatible with modern life and modern academia. I need to be able to plan things for work. To be able to do experiments, submit grants, and for teaching. I discuss it regularly during my counselling sessions. Yet as Soph is the priority, I just cannot see anyway of doing it better than we currently are. And when I do visit. And watch her body stiffen as she internalises a scream in agony. When I see her hand jerk uncontrollably over and over to the point it bruises from hitting her bedside table so much. When I can no longer understand her despite us both trying harder than ever. And when I do understand her she tells me at 9pm “this was the first interaction I had all day”. I realise just going to work and treading water is ok. Actually I am quite proud of that.</p>
</section>
<section id="the-haze-of-losing-things-we-take-for-granted." class="level2">
<h2 class="anchored" data-anchor-id="the-haze-of-losing-things-we-take-for-granted.">28/04/2025 The haze of losing things we take for granted.</h2>
<p>The worry that most marathon runners felt about running in the heat this weekend pales in comparison to how worried Karen and I get about how Soph deals with the heat. She is still in her mum and dad’s room which does not have air conditioning. We plan to move her back in the summer, but we’re hoping to wait until some work is done on the front of a neighbour’s house. The move is complicated further by how traumatising she found the move 2 months ago, and how she has deteriorated since. So we are also trying to brainstorm a new way of moving her.</p>
<p>Today is about 22ºC, and her room is hot - but not terrifyingly so. However, her severe ME means that she struggles to regulate her temperature, and being hot overnight meant she thinks she got zero sleep. She now eats lunch at 3pm, which means most people ran a whole marathon on Sunday in the same time that she gets to see people for &lt;5 minutes, and this is her normality. Today I sat down and she was hot and restless. Her right hand jerked and flailed and hit her bedside table over and over. At one point it jerked so violently she had to restrain it with her other hand. She screamed and wailed in pain and suffering. I just have to sit and watch. I can’t soothe her. I can’t touch her. I just have to sit in silence and watch. She managed 3.5 mouthfuls of soup somehow.</p>
<p>On the last few trips, it has been harder and harder to understand Soph most of the time. And this has worsened again on this trip. She has less energy to sign, and her speech is mainly just sounds. Karen and I discuss whether Soph knows how unintelligible she is, or whether she thinks she is understandable. It does not really matter; either way it must be so distressing for her to realise that the people who understand her best, and work so hard for that privilege, no longer can. That is what so deeply depressing about things at the moment. Everything that manifests as increased fatigue results in other things getting taken away. Its a zero sum game that just results in her having less time connecting with and in the presence of us, and being less understood.</p>
<p>I am going to have to process this, but it feels weird. It feels like quite a big thing to lose, the ability to understand my life partner. But I feel numb. I am unwilling to sit with these feelings and these thoughts much at the best of times, at the risk of letting the flood gates open and the fear that my house of cards will come crashing down. I am not even sure its possible to process what is happening, to rationalise it and accept it. So I suppose I just go on being addicted to exercise, drinking wine, and seguing unexpectedly onto something else. It feels like it has been an amazing year for chiff chaffs. I love hearing them and I know Soph would too.</p>
</section>
<section id="looking-through-the-keyhole-its-still-bright-inside." class="level2">
<h2 class="anchored" data-anchor-id="looking-through-the-keyhole-its-still-bright-inside.">07/04/2025 Looking through the keyhole its still bright inside.</h2>
<p>We moved Soph to try and avoid the worst impacts of Cheltenham race week, and allow Karen to deep clean her bedroom and make some changes where we could. We knew that the move would be traumatic, but hoped that over several weeks she would recover her strength and return back to her pre-move (still very low and extremely poorly) baseline.</p>
<p>Unfortunately it has not been very restful. Karen did an amazing job getting the room ready - they even moved Soph’s mattress between rooms - but there are just so many things we that we could not foresee. Primarily it has been the light. The south facing window of the room she is currently results in much more light which completely exhausts her. Over several weeks Karen has been taping bits of fabric around the curtains to minimise the light, but it is still not perfect. And because there is no air-con in that room, we have to move her back before peak summer. The anxiety is overwhelming if I sit with it.</p>
<p>At one lunch this visit, I tried tinkering with the curtains to prevent some light coming in that was meaning Soph was wearing her eye mask all day. Soph was trying to tell me what she wanted, but her speech and ability to communicate and sign is much worse at the moment, another heartbreaking outcome of this current crash. We went back and forth until I had to stop because it was eating into her energy for having lunch. I sat down, poured the soup from the flask into the cup, and got ready to hold it to her mouth. However, all that back and forth about the curtains had pushed her too far beyond her limits. I had to leave; she ate no soup. Overall her vertigo is worse, communication harder, and fatigue overwhelming. The tightrope we walk feels ever more precarious.</p>
<p>And yet, there are uplifting moments amongst the suffering and despair. At a different lunch, Soph made a comment that I could - thankfully - understand. And it was quick, dark humour that just set me off laughing. And I couldn’t stop. A laughing fit while Soph is lay on the bed, unable to look at me or really respond is quite surreal. She smiled in response. Its so rare that she hears people laugh anymore! Her smile is golddust, a new wonder of the world. Chasing it is a reason for being.</p>
<p>She now often makes the sign of a key being put in a lock over her heart, to explain that she feels locked, trapped inside her own body. These moments demonstrate that when you peer through the keyhole, it is still bright inside. She still surprises us with her strength, humour, and desire for independence.</p>
</section>
<section id="it-feels-like-were-drowning." class="level2">
<h2 class="anchored" data-anchor-id="it-feels-like-were-drowning.">18/03/2025 It feels like we’re drowning.</h2>
<p>This year has just been one thing after another. In the last month Soph has had a course of antibiotics, moved to her mum and dad’s room before the Cheltenham races, and then endured race week. This is on top of the daily fight to live. So it is no wonder that she is worse, but it does not make it easier to watch.</p>
<p>It is not the festival <em>per se</em> that makes Soph more poorly, but the steady stream of helicopters bringing in festival goers. For 4 days helicopters fly in low and circle above the racecourse for several hours. Soph’s sound sensitivity means that this is extremely disruptive for her, and as her room does not have carpets the helicopters cause small vibrations to her bed. For someone with vertigo all the time, this caused a substantial deterioration in her condition last year. As a result, this year Soph’s family moved her.</p>
<p>How would you move someone who has not sat up for year, likely cannot support their own body weight, has full body neuropathy, vertigo, noise and sound sensitivity? Karen bought an old massage chair that could go up and down, and John cut it down to size, reupholstered it, and added casters. It was not perfect - nothing was going to be - but it was the bespoke solution we needed. After one failed attempt they successfully moved her, although it was traumatic. I wasn’t there for the move, and I am slightly ashamed to say I am relieved that I was in Cornwall. It is so harrowing watching her push herself to do those things. That is the first time she left that bed in a year. I did not receive a message from her in 18 hours, which is made worse by knowing how desperately she does want to interact.</p>
<p>The move did help with the vibrations from the helicopters, but the room she is in now is directly above the kitchen, and is not overly sound proof. So to keep quiet we have mainly decamped to the conservatory, are careful about when we run water or shower, and generally stay out the kitchen wherever possible. Copper is confused by the changes and spends a lot of time wondering why we are not in the kitchen as we normally are! The changes her family make to protect Soph and give her the best chance to improve - or not get worse - are incredible and inspiring.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/caring_for_soph/copper_5.jpg" class="img-fluid figure-img" style="width:75.0%"></p>
<figcaption>Copper confused.</figcaption>
</figure>
</div>
<p>I came up on Saturday, a week after the move, a day after the festival ended. My visitwas delayed four days meaning I isolated for longer than I needed, but this is the way at the moment. When her condition worsens and she is pushed more into energy deficit, she knows she still has to eat, drink, and use the bedpan. Consequently, it is the communication and interaction (as well as other things I likely don’t know about) that cruelly get taken away. I try so hard to understand her. I pride myself on it. But this visit I could not understand her most of the time. I am finding that really hard to come to terms with.</p>
<p>We hope that in over several weeks, as we get back into some sort of a stable routine, we might be able to understand her better again, and she might improve from this new low. But how likely that is, no one can say. No expert exists to tell us these things. On the other hand, maybe there will be building works on our road, or a music festival, or the arrival of spring will mean people go about their gardening jobs (as I love to). And when it gets hotter she will have to move back because there is no air conditioning in her mum and dad’s room. People with severe ME need modern life to stand still sometimes and it doesn’t.</p>
<p>I feel like my brain is mush and this post feels like a completely scatter gun of thoughts. But it might as well represent how I am and how I am thinking. Nice things are lambs are out and I ran Bath half marathon in 01:23:56, meaning this is the fittest I have probably ever been!</p>
</section>
<section id="how-does-she-do-it" class="level2">
<h2 class="anchored" data-anchor-id="how-does-she-do-it">22/02/2025 How does she do it?</h2>
<p>“Hold it in”, Soph whispers to herself to try stop tearing up at the sheer severity of her suffering. Crying increases her fatigue and exacerbates other symptoms so she does her utmost at all times to not cry. I don’t say anything. I sit silently next to her, watching her in case I miss something she wants to say or makaton sign. I dare not look away.</p>
<p>“I do not feel right” is amongst the scariest thing Soph has said to me in a long time. For someone who suffers every second of every day, it must take quite something out of the ordinary levels of depravity to “not feel right”. I absorb the words, wishing I had anything I could say or do to help. Instead, I acknowledge I have understood, and then whisper “I am so sorry, you are doing so well”.</p>
<p>This trip has been amongst the hardest I can remember. Soph has had a <em>Staph aureus</em> skin infection for several months and around two weeks ago she finally took some antibiotics aimed at clearing it. The antibiotics made her worse, everything seems to. I often think of Soph in terms of a flower, some of the most beautiful are also the most fragile. The antibiotics - according to Soph - have also not cleared the infection, although given where it is she cannot see it, and she does not want me or Karen to see. Not the best way to know if the antibiotics have worked, but she has so little dignity that we admire her defiance. She is truly amazing.</p>
<p>Her extreme fatigue and symptoms mean that her life is one big depressing zero sum game at the moment. Any energy she uses for one thing, she has less energy for something else. Apart from her total energy is also less, like a battery slowly losing its capacity through time. She is so fatigued. Her ability to communicate is worse. My ability to understand her worse. This means we have barely been able to have any interaction during this visit, and I have not been able to stand at the foot of her bed for her to see my face. She cries and gets upset because we have had no time and said zero words to each other. All we want to do is be able to talk and listen to each other. Even that is too much to ask for at the moment. She cannot lift her arms very well and often has to use her right arm to manoeuvre and lift her left into the position she wants. She cannot put her eye mask over her eyes very well anymore. She will almost throw it onto her face and then move it in place. Sometimes she does not have the energy for that, and just has to lie there - frozen with exhaustion - with it half over one eye, and half over her nose. A similar thing happens when we change her glasses and undress her. Today I learned that right now she cannot close her eyes in the day - it would make the need for the eye mask less - but she did not have the energy to tell me WHY she can’t. All the while I sit and watch, trying to talk whenever I can. Trying to keep myself from crying. Feels like each moment burns into my memory.</p>
<p>And yet she gets through each day. She forces herself to eat soup. She still sends suggestions and agrees to new soups for us to make. She still fights for whatever interaction and communication she can. And I have no idea how she does most of it. How does she drink her shake in the morning, take her meds, or drink her water from a pint glass? This is incredible given she cannot sit up and her arms shake almost constantly; she must drag them from her bedside table onto her bed. Her defiance to keep on doing as much as she can herself, and not to lose anything more, is inspiring. It keeps all of us going. And when I see the hint of a smile, or she strokes my hand with hers, my heart soars. It does feel however - and I know I have said this before - that there is not much left to lose.</p>
<p>And watching her slowly get worse profoundly impacts all of us. My work and life setup does not feel sustainable. I feel like I am slowly drowning in everything. Most of the time this feeling passes, but I have not worked out how I get over it. Hopefully it is always darkest before the dawn.</p>
</section>
<section id="soph-has-not-seen-our-dog-copper-properly-in-over-6-years." class="level2">
<h2 class="anchored" data-anchor-id="soph-has-not-seen-our-dog-copper-properly-in-over-6-years.">04/02/2025 Soph has not seen our dog Copper properly in over 6 years.</h2>
<p>Copper - as some of you may know - is our 9 year old sausage dog. He was meant to be our great silver lining. When Soph became ill and unable to work, it meant she was at home so much more. Which gave us the opportunity to get a dog, and we specifically got Copper because he does not need walking so much with his tiny ridiculous legs.</p>
<p>And he was a triumph. He loves people and company, and loved Soph in particular. He just loves being on you, touching you, stealing your warmth. We toilet trained him, taught him tricks, and the couple of summers we spent in Cornwall together as a 3 are among my happiest memories. And Soph loves him so much. She loves how he holds toys between his paws while he chews them, and how he rolls on his back for scritches and so many other things (apart from his barking). We used to enjoy dressing him up and trying to put our glasses on his face while he snoozed next to us. We were a tripod supporting each other.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/caring_for_soph/copper_2.jpg" class="img-fluid figure-img" style="width:75.0%"></p>
<figcaption>Copper with glasses.</figcaption>
</figure>
</div>
<p>Soph has not been in Cornwall for ~7 years, and Copper has not either. As I live alone and try to get to the office when I am down there it is not the best place for a dog, so he lives in Cheltenham. When Soph was downstairs this worked ok. He would wait for her to come downstairs in the morning and be so excited to see her, showing her his belly and asking for scritches and giving licks. He is not an ideal companion dog, but he loved being around Soph as much as he could.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/caring_for_soph/copper_1.jpg" class="img-fluid figure-img" style="width:75.0%"></p>
<figcaption>Copper and Soph on an outdoor trip to to Potager gardens.</figcaption>
</figure>
</div>
<p>However, as Soph has got worse she has seen Copper less. When Copper goes upstairs he is very alert and wants to sniff everything compared to the mellow, settled dog we’d need him to be so that Soph’s vertigo is not triggered. A few years ago when I still managed to very occasionally bring him upstairs, she would enjoy seeing him, she would smile and be engaged. He would lick her hand and let her be stroked, but he could sense something was wrong and need reassurance from me.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/caring_for_soph/copper_3.jpg" class="img-fluid figure-img" style="width:75.0%"></p>
<figcaption>Copper and Soph when Soph when she used to spend time downstairs.</figcaption>
</figure>
</div>
<p>Fast forward to today, he is sat on me under a blanket while I am typing. Soph has not seen him properly in &gt;6 years. Yet another heartbreaking thing she has lost. Instead he lives downstairs providing company and emotional support for the rest of us. I describe him as a living hot water bottle and stress ball (he is lay on me under a blanket as I type this). He is great for me when I come up to visit. And I am so thankful for Soph’s family for looking after him so well.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/caring_for_soph/copper_4.jpg" class="img-fluid figure-img" style="width:75.0%"></p>
<figcaption>He just loves blankets.</figcaption>
</figure>
</div>
<p>I often describe Soph as being in stasis, like her life is on pause - albeit while going through indescribable suffering - until we can have our little lifey. And that means she remembers Copper when he was 3, not when he was 9. In that time he has recovered from a slipped disc which left him unable to walk, had some cancerous tissue removed from a paw, and started greying under his chinny chin chin. But he is not allowed to get old. Not until Soph recovers somewhat to be able to see him regularly again The thought of him dying of old age while Soph is still alone, suffering in her bed, crosses my mind briefly. Cannot even imagine how we would tell her.</p>
</section>
<section id="were-in-the-same-room-but-she-cant-really-see-us." class="level2">
<h2 class="anchored" data-anchor-id="were-in-the-same-room-but-she-cant-really-see-us.">13/01/2025 We’re in the same room, but she can’t really see us.</h2>
<p>In the last post, I described how little time Soph sees people in a day, but using the word “see” is very misleading. Soph’s ME/CFS means she very rarely “sees” us in the way you would expect. For instance, after I told her I was going to talk about her vision, she messaged to say she remembered the last time she saw my eyes - February 2024 (nearly a year ago). There are multiple reasons why Soph no longer gets to see us in any traditional sense, and they combine to be another cruel, complex, debilitating, and heartbreaking outcome of her severe ME/CFS.</p>
<p>First, Soph regularly loses her vision regularly in her left eye for an hour or two. This can happen several times a day, and we are not sure why (I don’t think). Her eye waters and she kind of shrugs it off; she has much more extreme symptoms to survive through each day! Oops its happened again. Imagine what you would do if you suddenly lost sight in one eye!?!</p>
<p>Second, Soph has severe light sensitivity, which means she cannot tolerate much light. During the day she wears prescription sunglasses indoors during the day, and she has the curtains closed apart from a slither of light that is angled towards the other end of the room to the one she lies. She only uses lamps that have low brightness, and we help her change into normal glasses in the evening from 8pm.</p>
<p>Third, her vertigo is so extreme that any changes in her head position can set off an attack. So Soph just looks straight forward, and rarely - if ever - turns her head. She has a very restricted field of view. When we move through her field of vision, this can also set off a vertigo attack. So Soph wears an eye mask when Karen is sorting the room out at bedtime, and when we move around the room at lunch and dinner, and even when we are refilling her cup for the next mouthful of soup.</p>
<p>We all do the best we can. We have nice prints at the wall facing her so that she has lovely things to look at (we have had new prints for &gt;1.5 years that we still have not managed to change over). She has a moon lamp and some nice tea light holders that she puts on in the evening. But all of our care is delivered by her bedside, which means she cannot see us, in the traditional sense of the word. She cannot see our eyes, our lips, our facial expressions. She cannot see the tears rolling down my face as I watch her suffer, or the smile that comes from her making a dark joke or when we share a memory of better times. Instead she seems to sense our emotions and what we’re doing in her peripheral vision and through her other senses. She really is desperate to maintain connections despite all of her limitations. Her fight keeps us all going.</p>
<p>Finally, to briefly rant. This trip was delayed as I got a lurgy for Christmas. I hate that Soph has to make decisions about when she is comfortable or able for me to come visit. It breaks my heart. And I will remember this trip for seeing a kingfisher, getting two fleeting but precious smiles from Soph, and spilling soup down her face during lunch and having to leave after just 1.5 mouthfuls (normally she does 5.5). Oh and her fatigue and general suffering was so bad on the last lunch we did not get to say goodbye. Sigh.</p>
</section>
<section id="so-close-yet-so-far-apart." class="level2">
<h2 class="anchored" data-anchor-id="so-close-yet-so-far-apart.">09/12/2024 So close yet so far apart.</h2>
<p>Last year (2023) I visited Soph every third weekend and stayed for 5 nights from Thursday to Tuesday. It never feels like enough, but Soph’s fatigue is so severe and she is so poorly that she cannot manage more. She also puts in so much effort to engage on my visits that seeing me can actually make her more ill.&nbsp;Heartbreakingly, because she is worse in 2024 I only come up on Fridays, so we have <strong>lost 20%</strong> of our time together. But in reality <strong>we have lost much more</strong>.</p>
<p>As Soph has gotten more ill, the time she can see people each day has decreased, and the proportion of that time that she gets to interact with people - rather than just surviving - has shrunk. In total, for most of 2024, she sees people for a max of 1.5 hours each day (probably less). During my visits, I probably see her for less than one hour each day, and only around thirty minutes of that is when I am not feeding her. Only thirty minutes of “quality” time to just be in the same room as each other.</p>
<p>During each long weekend visiting Soph, I see her for a <strong>total of around 4.5 hours</strong>. Unbelievable. The rest of the time she lies alone upstairs as we potter around downstairs, always worrying whether the day will be worse than the day before. <strong>So close, and yet so far apart</strong>. When I am in Cornwall and have been in work since 9, had meetings, ate lunch, been for a run, my mind wanders and realises it is 2:30 and Soph has been alone apart from a fleeting 5 or 10 minutes. Every single day. It is inconceivably cruel.</p>
<p>She must be so lonely. She is desperate to interact but is physically and mentally unable to do more than she currently can. She has to deal with terrifying, complicated and severe symptoms alone. To cope with vertigo attacks without being able to call for help.</p>
<p>But it is a lonely existence for the carers too. I find it very hard to find anyone my age with such a complicated life situation helping care for someone so so poorly. It feels like I lead a double life as a researcher and a carer, which ends up meaning I feel inadequate at both: not doing enough work and cannot seem to stop Soph’s slow, depressing, heartbreaking deterioration no matter how hard we all try. Logistically, I still self-isolate in Cornwall for 5 days before I travel to Soph’s, which is much lonelier in the winter when days are shorter and the weather worse for sitting outside. My friends are still super about this, always willing to wear a bunch of layers and brave the outside with me. But it does not stop you feeling like a burden. Like I am always bringing people’s mood down. Suppose we must always feel like that sometimes.</p>
</section>
<section id="when-was-the-last-time-we-kissed" class="level2">
<h2 class="anchored" data-anchor-id="when-was-the-last-time-we-kissed">18/11/2024 When was the last time we kissed?</h2>
<p>We were the most tactile couple. Living in each other’s pockets. Snuggling under blankets on a Sunday watching a film. Cuddling at night until we inevitably got too hot. And we still are, but in mind rather than body.</p>
<p>Through the last ten years, Soph has developed extreme skin sensitivity - a condition called <a href="https://en.wikipedia.org/wiki/Allodynia">allodynia</a> - her whole body neuropathic pain has become ever more extreme, and her lips and mouth are constantly on fire. What this means in practice in that her clothes cause her pain. Touch causes her pain. Soup on her lip causes her pain. Everything causes her pain. It is impossible for me to convey what it feels like, but when she sleeps she often has nightmares about being stabbed.</p>
<p>I find it the hardest when her suffering is most extreme (if it even varies anymore). When her vertigo flares, and her arms flail and she screams in fright, I can’t grab her hand, can’t hold her, can’t just reach out and try make her feel safe. When feeding her soup, I sometimes tip the soup in too fast which causes her to feel like she is choking and she starts coughing and spluttering. I can’t help her drink water, can’t tap her back, can’t hold her. I just have to sit and watch, feeling helpless and hopeless. It rips me to pieces and shatters my heart.</p>
<p>We have had so much taken away from us. Most of the normal things couples do we have been unable to do in years. Years without being able to physically show each other affection. I cannot remember the last time we kissed on the lips. The last time we had a proper hug or a cuddle. Let that sink in. No doubt Soph will remember. She never forgets how long she has been suffering for. And everything she has lost along the way.</p>
<p>And yet, love and care finds a way, and I now all the tiny physical touch we still share is precious to me. In the evening, I lie next to her, with my arm over her body. Never touching, it reminds me of a lap bar on an old rollercoaster that comes down over your legs to keep you safe in the carriage. She holds my other hand and we gently stroke each others hand. She slowly, shakily moves her hand to my face and gives me tiny, weak, but defiant strokes. I shave everyday so that my face is as smooth as possible for her. When we share a dark joke or a memory, and my cheeks raise - giving away a smile - I know she can feel it. She knows every wrinkle of my face. Every pock mark from my teenage acne. It is one of the ways to maintain closeness.</p>
<p>We are so close physically, and yet we can barely touch. And yet - amazingly - we are somehow closer than ever. More in love now than we ever have been. I have no idea how she does it.</p>
</section>
<section id="a-quiet-place." class="level2">
<h2 class="anchored" data-anchor-id="a-quiet-place.">29/10/2024 A Quiet Place.</h2>
<p>I arrive at 18:40 on Friday. Instead of going inside and saying hi to Karen, John, and Copper, I sit in my car and wait for Karen to message that it is ok to come in. Soph’s sound sensitivity is so severe that during mealtimes, any extra and unexpected noise is so painful and all encompassing that she cannot eat.</p>
<p>Soph has very severe sound sensitivity which means that normal levels of sound are painful for her. As a result, Soph’s family have tailored the house to keep sound to a minimum. We do not flush the toilets when Soph’s door is open, we are careful around the times when we take showers, we keep the TV volume low, we try and limit the number of times we come in and out of the front door, we never shout through the house, and we keep the doors to where we spend most of the day closed. We try prevent the dog barking (although if he sees a squirrel this is nigh on impossible). Essentially we do everything as quietly and softly as possible.</p>
<p>The same applies when you see her. We wear socks to try minimise the sound of our feet on the wooden floor. We only ever whisper - although the intonation of whispers can be problematic for her sound sensitivity too. We minimise rustling by opening packets of tissues/bags/wipes before we go into the room. We hold back sneezes and coughs, and prevent banging and tapping. We do everything in our power to create a tailored environment for Soph to survive in and give her the best chance of getting through each and every day.</p>
<p>However, we cannot always control the sound levels. It turns out being quiet is hard! Sometimes we accidentally drop something and Soph screams in shock and surprise. That suffering feels preventable. We feel incredible guilt even though it is not our fault. Earlier this year, the Wychwood music festival happened on Cheltenham racecourse and positioned a stage &lt;500m from Soph’s window. This resulted in her getting so much worse and we still have not recovered what we lost. For the last three weeks, neighbours have been having bathrooms and a roof replaced. Karen - to her immense credit - goes out and asks them to stop during key times (e.g.&nbsp;Soph’s meal times) but there is only so much she can do. Soph’s illness - and severe MECFS in general - is often incompatible with normal life and society.</p>
<p>And all these difficulties lead us to discussing pretty wild ideas. Can we soundproof her room somehow? Soundproof a different room where we could then move her? Could she wear over ear noise cancelling headphones (her whole body pain prevents this)? We’re desperate to build in resilience, but right now we can barely tread water.</p>
<p>At the end of the day, the quietness in the house is broken. Soph has kept so much pain inside during the day that she lets it out at night. We hear her scream and wail through the door, but we cannot go in to help.</p>
</section>
<section id="who-is-looking-after-who" class="level2">
<h2 class="anchored" data-anchor-id="who-is-looking-after-who">07/10/2024 Who is looking after who?</h2>
<p>From the outside, it looks like we care for Soph. Karen is Soph’s full-time carer. She sorts Soph’s medications, washes her clothes and bedding, makes countless soups, buys endless supplies, and is her medical guardian. The admin, research, and fighting Karen does for Soph is endless. We are all very lucky to have her. Soph’s dad - John - works 8-3 and then comes back to help care for Soph and allow Karen to run errands or take a walk. And then I visit every third weekend to allow Karen and John to do a few different things they cannot do without me there, and to see my beloved Soph. I collected some leaves during a walk as Soph loves autumn and left one for her in her room. She told me it smelled like autumn and the outside. We take so much for granted.</p>
<p>Soph constantly thinks of us as well, despite her being the one who is suffering relentlessly. I just want to highlight some examples of her incredible thoughtfulness and selflessness in the face of her own brutal torture.</p>
<p>First, she hides so much from us. To protect us in some small way. She suppresses screams, holds back tears, and holds her hand to her collarbone - or tucks it into her armpit - to stop uncontrollably shaking. There are many terrifying symptoms that she does not mention - beyond what we see - that must be so frightening. When I lie next to her in the evening for a short time, I can feel her whole body tense as she holds in intense, excruciating, indescribable pain. She then lets out a quiet “oooh” more akin to standing under a shower that is too cold than the feeling of being stabbed by thousands of knives inside and out.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/caring_for_soph/hell_makaton.png" class="img-fluid figure-img"></p>
<figcaption>H-E-L-L in BSL, icons from https://mkdeafzone.org.uk/</figcaption>
</figure>
</div>
<p>When she explicitly tells us how awful it is - today she used finger spelling for the word H-E-L-L to describe her life - she quickly moves on and downplays the seriousness of it all by saying “it’s ok”. “So so so so so so so so so much suffering, but it’s ok”. She also manages who does what in terms of her care to try and make sure the load is spread to try not to overburden anyone. If we suggest a change, she sometimes says no to protect us, even if she would like to see more of a particular person.</p>
<p>Despite her extreme limitations, she still manages to show us how much she cares. She has two lamps in her room that she can change the colour of. One is a moon-shaped light which she adores. When I enter her room, they will often be blue - my favourite colour. For Karen, she will make them a different colour. She makes sure to ask me if I’m ok, and will regularly mention to me ways in which we could allow John and Karen to take better care of themselves.</p>
<p>She remains my biggest supporter and cheerleader, despite being unable to speak and communication being extremely limited. She asks about my family, friends, and work. She sends me a <span class="emoji" data-emoji="four_leaf_clover">🍀</span> when I have counselling to wish me good luck. She arranges for a caramel shortbread cake for my birthday and arranges with us all to do and buy nice things for each other.</p>
<p>She is always thinking of others. All she wants is to make us all happy. She has a huge heart and is trapped inside her body. She has so much to give the world. She goes through hell every day and we are all incredibly proud. In awe of her force of will and huge heart when she is coping with the cruellest of hands.</p>
</section>
<section id="cruel-does-not-cover-it." class="level2">
<h2 class="anchored" data-anchor-id="cruel-does-not-cover-it.">17/09/2024 Cruel does not cover it.</h2>
<p>This evening I went into Soph’s for our “time” at 8pm. This is the only time of the day Soph really has to try and interact with someone when it is not also about eating soup. Her only time to connect. On a relatively good day, this can last ~30 minutes. Not today. She was using a tissue to cover her eyes as I moved around as she had dropped her eye mask somewhere. Within seconds of lying next to her I realised this was not going to go well. Her hand was limp. Her breathing laboured. Suffering and torture writ all over her face, and her body was tense as she tried to hold everything in. I had to make the decision - even though I had seen her for less than thirty minutes all day - to leave almost immediately as she was so far past her energy envelope, what she can cope with.</p>
<p>I returned with her chocolate, vegan cheese, and oat milk and undressed her. She had nothing left. She could barely lift her arm up for me to move the shoulder of her dress down. She held back screams of pain. I often sing silly made up lyrics to “here comes the sun” by The Beatles, one of our favourite songs, so start a verse, to fill the silence as chatting is impossible.</p>
<blockquote class="blockquote">
<p>“Mrs Beanie, my love for you grows each hour,</p>
<p>Mrs Beanie, you are one of the world’s most beautiful flowers…“.</p>
</blockquote>
<p>Soph interrupted me. She signs that she did not hear the first line. Despite everything going on in that moment, she was trying to escape, to engage, to listen. She is truly incredible. And it is all so extremely cruel.</p>
<p>And then I have to leave. I closed the door. The last night of this trip reduced to maybe five minutes. And she chose to use her energy trying to see me properly instead of having her sheet changed. And I had spilt soup on it, and other things can get on it. And she just has to lie there. And put up with it. Imagine having to choose between eating, engaging, and having your bedding changed. The lack of independence. Of choice. Of dignity.</p>
<p>I am so heartbroken. Feel so helpless. So incredibly, deeply sad. You do not get used to watching that level of torture and suffering. And yet she does it everyday. She is incredible.</p>
</section>
<section id="covid-and-the-trip-that-never-was." class="level2">
<h2 class="anchored" data-anchor-id="covid-and-the-trip-that-never-was.">25/08/2024 Covid and the trip that never was.</h2>
<p><img src="https://padpadpadpad.netlify.app/posts/caring_for_soph/covid_tests.jpg" class="img-fluid"></p>
<p>Shit. On the 15th August I tested positive for coronavirus. I woke up with a sore throat at 2am and just knew. Thankfully I was in Cornwall, and I had 8 days before I planned to go to Soph’s next. Plenty of time. And then I tested positive again and again. Day after day.</p>
<p>I had a holiday planned for after the next Soph visit to attend a couple of weddings and see family. But because of these events, if I did not get up to Cheltenham to see Soph beforehand, then it would be a very long time between visits due to needing to self isolate afterwards.</p>
<p>I tested negative on the 25th August, so I hoped I would be able to see Soph after all and change around some of my holiday plans. I chatted to Karen about what may be best for me trying to come up, but it was just impossible for me to discuss with Soph due to her fatigue and communication limitations. And unfortunately she has to make this decision, to be comfortable with me coming. And getting covid - and becoming more ill generally - is amongst her worst fears.</p>
<p>She worried about making the right decision for a couple of days, making herself more ill in the process. In the end, she decided it was best for me not to come, and she knew it would mean the biggest ever gap between my visits. And to put the despair of this decision into perspective: I am the only person who sees her other than her parents. Me visiting is one of the only positive things that changes in her life. My voice is one of the only voices she ever hears. Her life partner. And she had to make the decision not to see me.</p>
<p>Karen rang me to tell me the decision and we spent a day ruminating, trying desperately to work out how we could make it better, whether to bring it up again. But Soph is simply too ill to have to go through trying to change her mind. Everything - I mean everything - makes her fatigue worse. My heart broke into a thousand tiny pieces.</p>
<p>This is the longest I have not seen Soph for ~9 years. Even through coronavirus pandemic. And Soph is well aware. “5w 3 dys”, she messages on the day before I come up.</p>
</section>
<section id="feeding-soph-on-tuesday-making-presentation-slides-on-wednesday." class="level2">
<h2 class="anchored" data-anchor-id="feeding-soph-on-tuesday-making-presentation-slides-on-wednesday.">04/08/2024 Feeding Soph on Tuesday, making presentation slides on Wednesday.</h2>
<div style="display: flex; justify-content: center;">
<div class="tenor-gif-embed" data-postid="11667864" data-share-method="host" data-aspect-ratio="1.33121" data-width="65%">
<pre><code>&lt;a href="https://tenor.com/view/train-tracks-tracks-collect-get-gromit-gif-11667864"&gt;Train Tracks Collect GIF&lt;/a&gt;from &lt;a href="https://tenor.com/search/train-tracks-gifs"&gt;Train Tracks GIFs&lt;/a&gt;</code></pre>
</div>
</div>
<script type="text/javascript" async="" src="https://tenor.com/embed.js"></script>
<p><br></p>
<p>I feel like I live my life like Gromit on the train, constantly laying down the tracks in front of myself to keep going. Every day I lay down a new track, prioritising what to do that day - or at best that week or that month - uncertain and unable to plan much beyond that. Living precariously, day by day.</p>
<p>In some ways it often feels like I live two separate lives. In one life, I work in Cornwall at the University of Exeter, researching how bacteria respond to environmental change and in the other I care for Soph in Cheltenham. I try my best to juggle both and switch off from one when I am doing the other, but the stress and trauma of watching Soph suffer, and occasionally work stress, inevitably blend into some constant low-level - sometimes more severe - depression that makes managing both work and life rather challenging. The contrast between my last day at Soph’s to my first back at work is always stark: holding a cup for Soph to eat soup to making presentation slides, coding or editing manuscripts</p>
<p>Logistically it has become increasingly challenging. I visit Soph every third week, and beforehand I self-isolate for 5 days to ensure I do not have covid or any other illness that I could pass on to her. In practice, this means I only have 8 days in person at work in every 15 (work days). I have 4 days at home isolating, and 3 at Soph’s or travelling to Soph’s. Part of my research involves lab work, but in reality this has been incredibly challenging to plan and do. I rarely go to conferences or visit other research groups, and I miss seminars and visiting researchers I would like to chat to. As a research fellow I currently do not have many teaching responsibilities, but at some point that will change. Planning in-person activities with people alongside making sure I am covid (and other illness) free for visiting Soph is a constant anxiety for me. Caring for someone automatically makes you a hypochondriac. I second guess when my throat feels the tiniest bit different. The consequences of bringing a virus to Soph’s house are frightening. Then if I do get covid then all other plans would have to be shifted to accommodate a rearranged Soph visit. It makes my brain hurt thinking about it.</p>
<p>Emotionally and mentally, maintaining a full time job in academia while caring for Soph is hard, especially so recently as Soph has gotten worse. Although she may have stabilised over the last two visits, we have stabilised at a place much worse than before. Less time together. Less interaction. More suffering. And with that my depression has flared. I have been on antidepressants for several years, and I do counselling every third week (with Action for ME). I have become addicted to the routine and endorphins that exercise gives me. But it just isn’t enough at times. Some days, no matter how much I will myself, I cannot get out of bed. Scrolling to numb my brain. Napping to avoid the world. Unable to shift the haze of anxiety or the big black blob of dread that lives in the pit of my stomach. My inability to make my brain productive and do what I know I should be doing just makes me feel further behind with work, which fuels work stress. It is a never ending cycle.</p>
<p>And yet I am coping. I still manage to help care for Soph and maintain a career in academia. And even though most of the time it does not feel like it, somehow my career seems to still be going well. I am lucky and privileged for the opportunities I have, for the flexibility that my job currently allows me to look after Soph. And I have very understanding colleagues and a great support network that looks out for me. I am also getting better at letting some less important stressors go, to make time for myself and acknowledge that I need that afternoon of self care to make sure I can keep at least some of the plates turning.</p>
<p>Whether undressing Soph while she screams in pain one day, or analysing growth curves, attending meetings, and editing manuscripts. Both days start the same, with getting out of bed.</p>
<p>There are so many feelings of guilt, sadness, and grief - as well as fleeting smiles, happiness, and warmth - but this is a good introduction to how I “manage”.</p>
</section>
<section id="the-shifting-baseline-of-severe-me-and-grieving-what-weve-lost." class="level2">
<h2 class="anchored" data-anchor-id="the-shifting-baseline-of-severe-me-and-grieving-what-weve-lost.">13/07/2024 The shifting baseline of severe ME and grieving what we’ve lost.</h2>
<p>The shifting baseline is a concept used in fisheries management which reflects how in the present day we underestimate how big a fish population was before human exploitation. Because we have overfished many species of fish for a long period of time, we lose perception of what “untouched” actually is, and through the generations we forget just how many fish there were in the first place. This makes it hard to know what we should aim for in terms of management, and what numbers of fish we could get back to. This shifting baseline is exactly the same dilemma we face as Soph’s condition has worsened.</p>
<p>Eleven years ago (according to my Google Photos) Soph and I were on holiday in Italy. But if you saw her today you would be completely shocked.She would quite possibly be the poorliest person you have ever seen. She screams in pain. She can’t speak. Her hand constantly shakes. She has not gotten out of bed for &gt;3 months, not gone downstairs for several years, and not eaten solid food for longer than that. You would expect her to be in hospital under specialist care. And yet we as a family have normalised so much. We normalise what Soph fights through everyday, and what we witness, so that we can cope and continue caring for her. It’s normal for us that she only eats soup, and that we hold the cup to her mouth. That she loses eyesight in one eye several times a day. That she cannot tolerate light or sound. That she cannot look to her right or left without triggering a vertigo attack. This is our baseline. Because Sophs’s health has worsened quite slowly, we sometimes forget just how crazy everything has become. It also makes it hard to imagine what it even is that we would like to get back to, but this is an existential question that lives in the back of my brain.</p>
<p>Soph and I have gradually lost the ways that we connect as she has deteriorated. Each time we lose something, we find another way to connect and keep some sort of intimacy, before eventually that too, is taken from us. There are too many heartbreaks to cover, so I will keep to two that remain raw for me. For three years or so Soph watched birds in the garden during breakfast. She would come alive when fledglings came to the feeders and be in awe of the colours of the greenfinch, robins, and - on the rare occasion - the great spotted woodpecker. Our breakfast time was precious, a moment we could share together every day, and her mum and dad could share in it when I was not there. It’s been 1.5 years since Soph last went to the window to watch the birds. Today I saw 4 fledged goldfinches on the birdfeeder. It brings mixed emotions as I know how much Soph would have loved to see them.</p>
<p>To maintain our connection, Soph and I would make eye contact with each other twice a day for 30 seconds or so. We would just be present in that moment, and time would stand still. Her eyes are so expressive. But in the last two months that has gone too. Survival eats up almost all of her energy, and there is just so little left to be used for social interactions right now. My heart is broken, even more so because of the heartbreak and anguish I know Soph is also going through (on top of all the suffering). So now I grieve yet another loss alongside the general depression that comes with watching Soph suffer. I have managed to somehow cope with all the other losses, overcome the grief. However, I did not take notes so I feel like I am starting from scratch. Who knows when and how I will overcome it this time.</p>
</section>
<section id="six-voice-messages-a-photo-of-a-swan-and-15-emojis." class="level2">
<h2 class="anchored" data-anchor-id="six-voice-messages-a-photo-of-a-swan-and-15-emojis.">23/06/2024 Six voice messages, a photo of a swan, and 15 emojis.</h2>
<p>Early in 2024 I went to a Level 1 Makaton training course organised by the University. I had a very unique reason for going: to better communicate with Soph my 35 year old partner. The ability to communicate is something we take for granted, but it is just another thing that has become increasingly difficult for Soph. In person she now communicates with very strained words, some makaton, and some of her own signs (her birthday sign is especially resourceful), but it is when she holds in screams or holds back severe pain that makes it plain to us all how much she is suffering. And when her hand shakes uncontrollably and her head and arms writhe we know a crash is coming. If she has only just started eating, she somehow manages to continue because she knows she has to.</p>
<p>She only sees people for maybe an hour a day due to her fatigue, so outside of that she communicates via WhatsApp with shortened words and emojis. These are mostly to discuss soup choices and times for us to go up to do lunch/dinner etc. These are also ingenious as she describes the ingredients for a soup in a mix of emojis and broken words. For example the message:</p>
<p><span class="emoji" data-emoji="broccoli">🥦</span>, Cour toast<span class="emoji" data-emoji="corn">🌽</span>, <span class="emoji" data-emoji="pinching_hand">🤏</span> <span class="emoji" data-emoji="potato">🥔</span>, hard GC, thy</p>
<p>Translates to:</p>
<p>Broccoli, courgette, toasted corn, a small amount of potato, hard goats cheese and thyme.</p>
<p>Her mum and I translate these - mostly successfully - and when we discuss what Soph tells us we interestingly retell everything in full sentences. Maybe to humanise the conversations, to make them more like what Soph sounds like as we know she still is inside.</p>
<p>I had no idea how much I rely on these tiny messages, until they become less regular or stopped altogether. You can spend an hour looking at your phone because you know she is going to message, and you worry that something catastrophic has happened. Last Wednesday when I was in Cornwall I did not hear from Soph after 5pm until the next morning. That had never happened before in several years of her being bedbound. She had a big crash and was just incapable of messaging. And knowing how desperate she is to message, how lonely she is lay alone in bed just makes it worse. I panicked, spiralled and took the Thursday off work.</p>
<p>I send her maybe 5 or 6 voice messages a day telling her about the mundanities of my life in Cornwall. I try to take photos of baby animals, beaches, and sunsets to send to her. I receive back heart emojis and the broken words. I miss her voice. I miss her laugh. I miss her touch. I also feel pressure to maintain those voice messages, as it is the only voice she hears outside of her mum’s and dad’s in a day. I am prone to sending messages while pottering around, banging a door, or boiling the kettle, and that creates background noise that makes the message harder for Soph to listen to. I know I shouldn’t feel guilty, and yet I am trying to do better.</p>
<p>There are so many complexities about communication I cannot cover in a short post. How Soph’s mum discusses treatment options with her now I have no idea. How Karen and I have to discuss so many things about visiting and Soph because she does not have the energy to. How she must feel forgotten as she is not able to communicate with people she loves. How she feels so alone. The mutual frustration of me not being able to understand a sign and the obvious toll it takes on Soph’s energy to have to repeat it several times. Soph is extremely resourceful and incredible for being able to communicate despite everything. And I try so hard to try to understand because every message, sign, word is precious, a privilege to try to decipher. She is an incredible woman, fighting to survive and keep any semblance of a personal connection wherever she can.</p>
<p>Below is a video of the finger spelling alphabet. It might be useful for someone. <span class="emoji" data-emoji="heart">❤️</span></p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/-OO4VfT-OzI" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
</section>
<section id="the-worst-it-has-ever-been." class="level2">
<h2 class="anchored" data-anchor-id="the-worst-it-has-ever-been.">02/06/2024 The worst it has ever been.</h2>
<p>Why do I always think it cannot get any worse? <a href="https://wychwoodfestival.com/">Wychwood Music Festival</a> is on at the Racecourse two fields away from Soph’s house. The sound feels louder than previous years and now reverberates through her room. This makes her condition worse. The earplugs she uses do very little to help. She holds her hands to her ears in pain. She cannot move to another room. There is no escape. It is just something else that is relentless. Torture. Suffering. It is going to last three days. Each day compounds onto the next. She starts each new day relatively more poorly than the last, and all her energy needs to go into eating and doing the bare minimum. Since all of her energy is used up for surviving, there isn’t any left for actually living. No energy can be used for talking, engaging, being. I cannot fathom how lonely Soph must be. It is beyond heartbreaking. And through all this she thinks of other people. She asks me to leave because she does not want our time together - already limited in duration and scope - to be like this. She does not want me to see her like this. And yet maybe this is the new normal - at least for a bit. <a href="https://meassociation.org.uk/medical-matters/items/symptoms-post-exertional-malaise-pem/">Post exertional malaise</a> is unpredictable and we do not have a great track record of seeing Soph’s condition improve after big crashes. So maybe I will have to see her like this to be able to see her at all, at least for a bit. But we hope. As I write this on Sunday morning I don’t know whether I will see her today. Maybe I will stay and just cook soup for her, food for her family, and be around for emotional support for her parents. Maybe I will see her. I cannot ask Soph because she has no energy to answer. I am supposed to have a small holiday on Tuesday. Not really sure how.</p>
<p>Soph’s mum rings people at the local council and gets a number for the local environment monitors who reassure her that they are well within their sound limits. But that isn’t the point. A loud music festival might be a slight annoyance for most people but it is brutal for Soph. No one understands. How can anyone understand how impossible life is for Soph and her family? They do amazing things everyday to survive and be the best they can be but severe ME is just incompatible with life sometimes. However much we try we cannot control everything.</p>
<p>Here is a video of baby swans I saw to try and give me some level of happiness. Soph will love this video, but I do not know when she will have the energy to see it.</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/dA5iDJ5MWVM" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>


</section>
</section>

 ]]></description>
  <category>ME</category>
  <category>carer</category>
  <guid>https://padpadpadpad.netlify.app/posts/caring_for_soph/</guid>
  <pubDate>Fri, 31 May 2024 23:00:00 GMT</pubDate>
  <media:content url="https://padpadpadpad.netlify.app/posts/caring_for_soph/preview.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>ME Awareness Day 2024</title>
  <dc:creator>Daniel Padfield</dc:creator>
  <link>https://padpadpadpad.netlify.app/posts/me_awareness_2024/</link>
  <description><![CDATA[ 





<section id="today-is-me-awareness-day." class="level3">
<h3 class="anchored" data-anchor-id="today-is-me-awareness-day.">Today is ME awareness day.</h3>
<p>Soph and I have been together for 12 years. She is a speech therapist and the most extraordinary person I know. She is beautiful, darkly funny, stubborn, fiercely independent, and selfless. She loves cooking, watching the birds, poetry, flowers, dancing, eating, and countless other things. She still loves those things, she just now has to fight to just survive every second, minute, and hour, instead of living.</p>
<p>Because Soph has very severe ME and whole body neuropathic pain. She is currently bedbound, only managing to go to the bathroom every 2 weeks on average, and even that she does through pure stubbornness and force of will. Her pain is indescribable, but right now we watch her writhe and hear her wail as there is no respite. It is relentless. It is brutal. It is never ending. She sleeps for only one hour a night, but has nightmares about being stabbed because there is no escape from her pain. She lies in her bed 24 hours a day, in a darkened room, with sunglasses on due to her light sensitivity. She has sound and touch sensitivity. We have not kissed or hugged for several years. She is probably the poorliest person I - and most likely you reading this - will ever know or read about. And we (modern medicine and society as a whole) do not know how to treat people this severe. They get left and forgotten about. And when they’re so severe you do not hear from them, because Soph can barely use her phone due to fatigue and cognitive issues and mainly messages in emojis, only 4 or 5 times a day. It is traumatic and exhausting to try and put into words how ill she is, and I do not do it enough. This is me trying to do it more, maybe little and often will be easiest.</p>
<hr>
<section id="loving-someone-with-severe-me-and-neuropathic-pain." class="level4">
<h4 class="anchored" data-anchor-id="loving-someone-with-severe-me-and-neuropathic-pain.">Loving someone with severe ME and neuropathic pain.</h4>
<p><em>Seeing Soph is the worst part of my day</em></p>
<p><em>I have never felt closer to her emotionally</em></p>
<p><em>While never feeling further away from her physically</em></p>
<p><em>I have never had so much to talk to her about</em></p>
<p><em>While communication between us has never been so difficult</em></p>
<p><em>Her heart has never been more full with love to give</em></p>
<p><em>But she has never been less able to show it to the world</em></p>
<p><em>Soph has never been more vulnerable, poorly, and weak</em></p>
<p><em>While never being stronger than she is right now to survive every day</em></p>
<p><em>I still feel like I know her</em></p>
<p><em>But ME and the pain makes it harder and harder to see the glimpses of her</em></p>
<p><em>But when I see her eyes, or a tiny smile, seeing Soph is the best part of my day.</em></p>
<hr>
<div id="fig-soph" class="quarto-layout-panel">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-soph-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://padpadpadpad.netlify.app/posts/me_awareness_2024/soph_1.jpg" class="img-fluid figure-img"></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://padpadpadpad.netlify.app/posts/me_awareness_2024/soph_2.jpeg" class="img-fluid figure-img"></p>
</div>
</div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-soph-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: A picture of me, Soph, and Copper in ~2016 (left), and Soph in 2020 (right).
</figcaption>
</figure>
</div>


</section>
</section>

 ]]></description>
  <category>caring</category>
  <category>ME</category>
  <guid>https://padpadpadpad.netlify.app/posts/me_awareness_2024/</guid>
  <pubDate>Sat, 11 May 2024 23:00:00 GMT</pubDate>
  <media:content url="https://padpadpadpad.netlify.app/posts/me_awareness_2024/preview.png" medium="image" type="image/png" height="36" width="144"/>
</item>
<item>
  <title>Submitting files to ENA</title>
  <dc:creator>Daniel Padfield</dc:creator>
  <link>https://padpadpadpad.netlify.app/posts/ena_file_submission/</link>
  <description><![CDATA[ 





<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>The <a href="https://www.ebi.ac.uk/ena/browser/about">European Nucleotide Archive</a> (ENA) provides a comprehensive record of the world’s nucleotide sequencing information, covering raw sequencing data, sequence assembly information and functional annotation. I always find it so painful to submit to ENA. I do it so rarely (maybe once or twice a year) that by the time I come to do it again, I have forgotten how to do it. The ENA documentation is quite good, but it is not always clear what you need to do. I have written this post to help me remember how to submit files using the Webin-CLI software and hopefully help others who are in a similar position.</p>
<p>So I assume that you have stumbled across this post in a similar position: you have a bunch of sequencing data you want to submit to ENA. Throughout this post, I will reference the <a href="https://ena-docs.readthedocs.io/en/latest/">online documentation</a> provided by the ENA, and you will need to signup to the <a href="https://www.ebi.ac.uk/ena/submit/sra/#home">interactive</a> Webin submission service and download the Webin command line submission interface (<a href="https://github.com/enasequence/webin-cli">Webin-CLI</a>).</p>
<p>Overall the process for submitting sequencing files can be summarised as:</p>
<ul>
<li>Register a study (interactive online)</li>
<li>Register samples (interactive online and using Excel)</li>
<li>Create sample metadata (using Excel)</li>
<li>Make individual manifest files for each sample (I use R)</li>
<li>Rename files if needed (I use R)</li>
<li>Submit samples (using bash and Webin-CLI)</li>
</ul>
</section>
<section id="submitting-files-to-ena" class="level2">
<h2 class="anchored" data-anchor-id="submitting-files-to-ena">Submitting files to ENA</h2>
<p>We will go through each one to summarise the main steps and things I often get wrong.</p>
<section id="register-study-using-the-interactive-interface" class="level3">
<h3 class="anchored" data-anchor-id="register-study-using-the-interactive-interface">1. Register study using the interactive interface</h3>
<p>The first thing to do is to register your study. This is easiest to do interactively on the <a href="https://www.ebi.ac.uk/ena/submit/webin/">Webin Submissions Portal</a> and the ENA have a help page on this <a href="https://ena-docs.readthedocs.io/en/latest/submit/study/interactive.html">here</a>. The Register Study link is currently found towards the top left of the page.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/ena_file_submission/register_study.png" class="img-fluid figure-img"></p>
<figcaption>ENA submission portal</figcaption>
</figure>
</div>
<p>This is the easiest bit of the process and probably the only part that doesn’t take me several attempts. If submitting sequences from a study that is nearing publication, you can enter the study title and the abstract. The release date of the study is when all the sequences will become public. I generally put this for a week after I started the process to allow me to make many mistakes, but post submission you can always bring this date forward. Citations can be added at a later date, so it is possible to submit sequencing before the work is published.</p>
<p>Make a note of the Accession Number for your study as it will be used later (should start with <strong>PRJEB</strong>).</p>
</section>
<section id="register-samples-using-the-interactive-interface" class="level3">
<h3 class="anchored" data-anchor-id="register-samples-using-the-interactive-interface">2. Register samples using the interactive interface</h3>
<p>A sample is sequenced biomaterial, and we need to register samples to make sure each sample has metadata associated with it. Samples are associated with checklists, which define the fields used to annotate the samples. The ENA help page for this is quite <a href="https://ena-docs.readthedocs.io/en/latest/submit/samples/interactive.html">good</a>.</p>
<p>When using the interactive submission portal, you need to click through to <strong>Register Samples</strong> and then click <strong>Download spreadsheet to register samples</strong>. There are many different standardised sheets to choose from which should help provide consistent metadata that will allow for better reporting of datasets in the future.</p>
<p>However, as most of the sequencing I upload are from bespoke, controlled experiments in the lab, I have generally only used the <strong>ENA default sample checklist</strong> which is within <strong>Other Checklists</strong> There are some fields that are mandatory for that checklist. What they are, and their definition is displayed after you have clicked on your checklist.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/ena_file_submission/fields.png" class="img-fluid figure-img"></p>
<figcaption>ENA sample fields for default sample checklist</figcaption>
</figure>
</div>
<p>If there are extra fields you want to add, then add them, otherwise click <strong>Next</strong> and click <strong>Download Template Spreadsheet</strong>, which will download a .tsv file that contains the minimum required fields for the ENA sample register. When opened in Excel (<strong>the horror</strong>), this will look something like this.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/ena_file_submission/empty_samples_checklist.png" class="img-fluid figure-img"></p>
<figcaption>Empty ENA samples checklist</figcaption>
</figure>
</div>
<p>You can then fill out your samples checklist. There is some key advice from the <a href="https://ena-docs.readthedocs.io/en/latest/submit/samples/interactive.html">ENA documentation</a> when filling out this spreadsheet:</p>
<ul>
<li>Do not remove or modify, the first three lines of the spreadsheet, which specify the checklist in use, field names, and units row.</li>
<li>Enter data in row 4 of the spreadsheet onwards. Use row 3 (#units) to specify units where required by the checklist.</li>
<li>You can add custom fields by inserting new column headers</li>
<li>Do not edit the existing column names</li>
</ul>
<p>From doing this a few times, I have my own advice for future me that past me learned the hard way:</p>
<ul>
<li>Every sample is always associated with a taxon, which is inputted into the <strong>tax_id</strong> column and then the <strong>scientific_name</strong> column. I use the NCBI <a href="https://www.ncbi.nlm.nih.gov/taxonomy">taxonomy browser</a> to find the correct taxon. For example, sediment metagenome has the taxonomy ID of 749907.</li>
<li>When inputting numbers into Excel, when you double click them to go autofill, they often follow a numeric rule (x+1) or something. Copy and paste the same number into the cell below, and then double click them both to autofill and this does not happen.</li>
<li>Each sample needs to have its each individual row. The <strong>sample_alias</strong> column needs to be a unique identifier to identify that sample. It is unique to <strong>ALL</strong> future submissions too so make sure you label them in relation to the study <strong>AND</strong> the sample. For example for a recent project on Myxobacteria I started all of them with <strong>myxo_16s_s1</strong> or <strong>myxo_rpoB_1</strong> etc. All the other columns are relative self explanatory. You can also add metadata columns. An example completed file - saved as a<code>.txt\</code> might look something like this.</li>
<li>I generally have the same name for the <strong>sample_title</strong> as I do for the <strong>sample_alias</strong>.</li>
<li>In the <strong>sample_description</strong> column, I generally put what sequencing was done.</li>
<li>For most studies, I also add extra columns that are unique to the study and represent treatments and extra data that is interesting and needed to best understand the files. For example, I added columns about what predefined habitat the samples came from and what biome the sample was classified as. I also added metadata collected by a collaborator on where the sample was taken and the latitude and longitude.</li>
</ul>
<p>My most recent sample checklist looked like this:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/ena_file_submission/complete_samples_checklist.png" class="img-fluid figure-img"></p>
<figcaption>Complete ENA samples checklist</figcaption>
</figure>
</div>
<p>Once completed, this file can be uploaded to the ENA interactive web portal by clicking <strong>Register Samples</strong> -&gt; <strong>Upload filled spreadsheet to register samples</strong> and then <strong>Submit Completed Spreadsheet</strong> after you have chosen your file. The portal will tell you if you are successful which means you can move on to the next stage.</p>
</section>
<section id="create-sample-metadata" class="level3">
<h3 class="anchored" data-anchor-id="create-sample-metadata">3. Create sample metadata</h3>
<p>After doing steps 1 and 2, you should receive emails containing the Accession Numbers of your experiment and of your samples. These need to be included in a manifest file that is required for the submission of each sample to ENA. Details on the manifest file can be found <a href="https://ena-docs.readthedocs.io/en/latest/submit/reads/webin-cli.html">here</a>.</p>
<p>The information needed for each sample may change based on what files are being uploaded. For paired end fastq reads, they are generally:</p>
<ul>
<li>STUDY: Study Accession Number, from Step 1.</li>
<li>SAMPLE: Sample Accession Number, from Step 2.</li>
<li>NAME: Experiment name, which I generally use the same as the <strong>sample_alias</strong>.</li>
<li>PLATFORM: Sequencing platform</li>
<li>INSTRUMENT: Sequencing instrument</li>
<li>INSERT_SIZE: Size of the sequence is the length of the sequence between the adapter sequences.</li>
<li>LIBRARY_SOURCE: What type of information was sequenced? DNA, RNA, etc.</li>
<li>LIBRARY_SELECTION: Library selection. What selection was done on the DNA? PCR, random, etc.</li>
<li>LIBRARY_STRATEGY: Library strategy. What type of sequencing stratedy was done? WGS, RNA-Seq, etc.</li>
<li>FASTQ: File name of forward fastq file</li>
<li>FASTQ: File name of reverse fastq file</li>
</ul>
<p>I generally create another Excel file, with these values as column names, where I document all the samples from a study. I call this <strong>sample_metadata.csv</strong>, and my most recent one looks like this.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/ena_file_submission/sample_metadata.png" class="img-fluid figure-img"></p>
<figcaption>Example sample metadata</figcaption>
</figure>
</div>
<p>I leave the fastq columns blank because I am going to rename the files before uploading to be the same as the <strong>sample_alias</strong>.</p>
</section>
<section id="create-manifest-files-for-each-sample" class="level3">
<h3 class="anchored" data-anchor-id="create-manifest-files-for-each-sample">4. Create manifest files for each sample</h3>
<p>Each sample needs its own manifest file, so I use R to create manifest files from the <strong>sample_metadata.csv</strong> file. We want to make a manifest file for each row of the spreadsheet.</p>
<p>To reiterate, I try to use the <strong>sample_alias</strong> as a unique ID for each manifest file and fastq file linked to the that sample. So I will name each manifest file as the <strong>sample_alias</strong>.txt, and then rename the fastq files to be the same as the <strong>sample_alias</strong>_R1/R2.fastq.gz.</p>
<p>Example code to do this could be:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create single manifest file for each sample from a sample metadata file</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load in tidyverse</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># read in sample metadata column</span></span>
<span id="cb1-7">files <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ena_submission/sample_metadata.csv'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make numeric columns character so that pivot longer works</span></span>
<span id="cb1-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">where</span>(is.numeric), as.character))</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create single manifest file for each row</span></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run a for loop</span></span>
<span id="cb1-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(files)){</span>
<span id="cb1-14">  </span>
<span id="cb1-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab the first row</span></span>
<span id="cb1-16">  temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> files[i,]</span>
<span id="cb1-17">  </span>
<span id="cb1-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># go from wide to long format</span></span>
<span id="cb1-19">  temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>())    </span>
<span id="cb1-20">  </span>
<span id="cb1-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab the file name from the NAME row (third element)</span></span>
<span id="cb1-22">  file_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>value[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb1-23">  </span>
<span id="cb1-24">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rename the fastq columns FASTQ</span></span>
<span id="cb1-25">  temp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>name[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'FASTQ'</span></span>
<span id="cb1-26">  temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,]</span>
<span id="cb1-27">  </span>
<span id="cb1-28">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># name the fastq files R1 and R2 and the file name</span></span>
<span id="cb1-29">  temp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>value[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(file_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_R1.fastq.gz'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb1-30">  temp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>value[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(file_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_R2.fastq.gz'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb1-31">  </span>
<span id="cb1-32">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save it out</span></span>
<span id="cb1-33">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># need to create a folder for your manifest files</span></span>
<span id="cb1-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.table</span>(temp, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'manifest_files/'</span>, file_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.txt'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb1-35">}</span></code></pre></div>
</div>
<p>This should result in you having a unique manifest file for each of your samples that you registered.</p>
<p>An example of the top row from my most recent submission is a file created called <strong>myxo_16s_s1.txt</strong>. Its contents are:</p>
<pre><code>STUDY PRJEB73761
SAMPLE ERS18415308
NAME myxo_16s_s1
PLATFORM ILLUMINA
INSTRUMENT Illumina MiSeq
INSERT_SIZE 300
LIBRARY_SOURCE GENOMIC
LIBRARY_SELECTION PCR
LIBRARY_STRATEGY AMPLICON
FASTQ myxo_16s_s1_R1.fastq.gz
FASTQ myxo_16s_s1_R2.fastq.gz</code></pre>
</section>
<section id="submit-samples" class="level3">
<h3 class="anchored" data-anchor-id="submit-samples">5. Submit samples</h3>
<p>Once you have your manifest files, you can submit them to ENA. However, it is likely that before you do this you may need to rename your files to match the names you specified in the FASTQ values of each manifest file. This is because the manifest file will be looking for files with those names in the directory where you specify the fastq files are.</p>
<p>So I have started creating a new folder called <strong>ena_upload</strong> where I copy and rename the samples to for ena submission. These can then be deleted after submission is successful.</p>
<p>I do file renaming in R, and this is likely to be bespoke for each project and how you have named your sample aliases. In case there are mistakes down the line in your file renaming or submission - or you find that some files do not have the metadata you thought they had - it might be useful to save out a csv with all the original names and the new names.</p>
<p>An example of what this might look like is:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rename files for ena upload</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list manifest files names</span></span>
<span id="cb3-4">manifest_files <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list.files</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'manifest_files'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list the sequencing files to rename</span></span>
<span id="cb3-7">files <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list.files</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'where_the_raw_files_live'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fastq|fq'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">recursive =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># empty dataframe to populate original file names and new file names</span></span>
<span id="cb3-10">d_files <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">manifest_file =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span>(manifest_files), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">original_file =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_file =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)</span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># write for loop ro rename files</span></span>
<span id="cb3-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(manifest_files)){</span>
<span id="cb3-15">  </span>
<span id="cb3-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab the first row</span></span>
<span id="cb3-17">  temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d[i,]</span>
<span id="cb3-18">  </span>
<span id="cb3-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab the ith manifest fuke</span></span>
<span id="cb3-20">  temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> manifest_files[i]</span>
<span id="cb3-21">  </span>
<span id="cb3-22">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove file extension</span></span>
<span id="cb3-23">  temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> tools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file_path_sans_ext</span>(temp)</span>
<span id="cb3-24">  </span>
<span id="cb3-25">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># in this example, the sample identifier is the s1 part, so I will grab that</span></span>
<span id="cb3-26">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># this bit needs to allow you to find the sequencing files - given the current naming - that relate to that manifest file</span></span>
<span id="cb3-27">  temp_num <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_split</span>(temp, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span>)[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb3-28">  </span>
<span id="cb3-29">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># find the sequencing files that link to that manifest file</span></span>
<span id="cb3-30">  files_temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> files[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span>(files), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(temp_num, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>))]</span>
<span id="cb3-31">  </span>
<span id="cb3-32">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rename files for ena upload</span></span>
<span id="cb3-33">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for R1 file</span></span>
<span id="cb3-34"></span>
<span id="cb3-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.copy</span>(files_temp[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span>(files_temp), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'R1'</span>)], <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'~/ena_upload/'</span>, temp, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_R1.fastq.gz'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>))</span>
<span id="cb3-36">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for R2 file</span></span>
<span id="cb3-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.copy</span>(files_temp[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span>(files_temp), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'R2'</span>)], <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'~/ena_upload/'</span>, temp, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_R2.fastq.gz'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>))</span>
<span id="cb3-38">  </span>
<span id="cb3-39">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># populate d_files</span></span>
<span id="cb3-40">  d_files<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>original_file[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span>(files_temp[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span>(files_temp), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'R1'</span>)])</span>
<span id="cb3-41">  d_files<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>original_file[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span>(files_temp[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span>(files_temp), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'R2'</span>)])</span>
<span id="cb3-42">  d_files<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>new_file[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(temp, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_R1.fastq.gz'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb3-43">  d_files<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>new_file[(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(temp, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_R2.fastq.gz'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb3-44">}</span>
<span id="cb3-45"></span>
<span id="cb3-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save out csv containing old and new names</span></span>
<span id="cb3-47"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.csv</span>(d_files, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'file_renaming.csv'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</div>
<p>This should result in the sequencing files being renamed to match the names specified in the manifest files. We should then be able to upload them to ENA. I use the ENA webin-cli tool to do this. You can find the documentation for this tool <a href="https://ena-docs.readthedocs.io/en/latest/submit/reads/webin-cli.html">here</a>.</p>
<p>We can now run Webin-cli to submit our samples. We will start by validating our submission to check no terrible errors have occurred. This bit is now done in the <strong>Terminal</strong> using <strong>bash</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># submitting files to ENA</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check webin-CLI is working</span></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># download latest version from https://github.com/enasequence/webin-cli/releases</span></span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wget</span> https://github.com/enasequence/webin-cli/releases/download/7.0.1/webin-cli-7.0.1.jar</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check it exists</span></span>
<span id="cb4-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ls</span></span>
<span id="cb4-9"></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check it is working</span></span>
<span id="cb4-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">java</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-jar</span> webin-cli-7.0.1.jar <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-version</span></span>
<span id="cb4-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seems to be working</span></span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># open a screen</span></span>
<span id="cb4-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">screen</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-ls</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check what screen exist</span></span>
<span id="cb4-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">screen</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-S</span> ena <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># start a new screen called ena</span></span>
<span id="cb4-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># screen -r ena # reopen the screen</span></span>
<span id="cb4-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#screen -X -S ena quit # you want to kill the screen</span></span>
<span id="cb4-19"></span>
<span id="cb4-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># validate each file submission</span></span>
<span id="cb4-21"></span>
<span id="cb4-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># path to raw renamed sequencing files</span></span>
<span id="cb4-23"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">fastq_files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>~/ena_upload</span>
<span id="cb4-24"></span>
<span id="cb4-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># path to manifest files</span></span>
<span id="cb4-26"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">manifest_files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>~/manifest_files</span>
<span id="cb4-27"></span>
<span id="cb4-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create a manifest output folder</span></span>
<span id="cb4-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$manifest_files</span>/output</span>
<span id="cb4-30"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">manifest_output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$manifest_files</span>/output</span>
<span id="cb4-31"></span>
<span id="cb4-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run a test</span></span>
<span id="cb4-33"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$manifest_files</span>/myxo_16s_s1.txt</span>
<span id="cb4-34"></span>
<span id="cb4-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run a for loop to submit sequencing files</span></span>
<span id="cb4-36"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> file <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$manifest_files</span>/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>.txt</span>
<span id="cb4-37"></span>
<span id="cb4-38">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb4-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cat the file</span></span>
<span id="cb4-40">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$file</span></span>
<span id="cb4-41"></span>
<span id="cb4-42">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab the file name without the extension</span></span>
<span id="cb4-43">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">stub</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>.txt<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">})</span></span>
<span id="cb4-44"></span>
<span id="cb4-45">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">man_file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$file</span></span>
<span id="cb4-46">        </span>
<span id="cb4-47">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make a folder for the output of the validation</span></span>
<span id="cb4-48">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$manifest_output</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$stub</span></span>
<span id="cb4-49"></span>
<span id="cb4-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run webin-cli - run validation to check</span></span>
<span id="cb4-51">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">java</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-jar</span> webin-cli-7.0.1.jar <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-validate</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-context</span> reads <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-manifest</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$man_file</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-inputDir</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$fastq_files</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-outputDir</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$manifest_output</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$stub</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-username</span> your_username <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-password</span> your_password</span>
<span id="cb4-52">        </span>
<span id="cb4-53">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</div>
<p>After this has ran, you can check the output of all the validation files. If there are no errors, you can then submit the files to ENA. This can be done quite simply in R.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check validation reports</span></span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list validation folders</span></span>
<span id="cb5-4">validation_folders <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list.files</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'~/manifest_files/output'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># setup empty dataframe to populate</span></span>
<span id="cb5-7">d_check <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sample =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span>(validation_folders),</span>
<span id="cb5-8">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">check =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, </span>
<span id="cb5-9">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fullname =</span> validation_folders)</span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run a for loop to grab the output of the validation report for each sample</span></span>
<span id="cb5-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(d_check)){</span>
<span id="cb5-13">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># read file in</span></span>
<span id="cb5-14">  temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readLines</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(d_check<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>fullname[i], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'webin-cli.report'</span>))</span>
<span id="cb5-15">  </span>
<span id="cb5-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># input it into the correct place in the dataframe</span></span>
<span id="cb5-17">  d_check<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>check[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(temp)]</span>
<span id="cb5-18">  </span>
<span id="cb5-19">}</span>
<span id="cb5-20"></span>
<span id="cb5-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># drop the full name column</span></span>
<span id="cb5-22">d_check <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(d_check, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>fullname)</span>
<span id="cb5-23"></span>
<span id="cb5-24">d_check</span></code></pre></div>
</div>
<p>My most recent one of these looks like this:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/ena_file_submission/check_validation.png" class="img-fluid figure-img"></p>
<figcaption>Checking validation of manifest files</figcaption>
</figure>
</div>
<p>We can then run the submission for realsies! This bit is now done in the <strong>Terminal</strong> using <strong>bash</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run a for loop to submit sequencing files</span></span>
<span id="cb6-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> file <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$manifest_files</span>/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>.txt</span>
<span id="cb6-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb6-4">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cat the file</span></span>
<span id="cb6-5">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$file</span></span>
<span id="cb6-6"></span>
<span id="cb6-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab the file name without the extension</span></span>
<span id="cb6-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">stub</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>.txt<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">})</span></span>
<span id="cb6-9"></span>
<span id="cb6-10">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">man_file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$file</span></span>
<span id="cb6-11"></span>
<span id="cb6-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run webin-cli</span></span>
<span id="cb6-13">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">java</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-jar</span> webin-cli-7.0.1.jar <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-submit</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-context</span> reads <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-manifest</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$man_file</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-inputDir</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$fastq_files</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-outputDir</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$manifest_output</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$stub</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-username</span> your_username <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-password</span> your_password</span>
<span id="cb6-14">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</div>
<p>With any luck, these files should then be viewable the Samples Report section of the ENA Web Portal.</p>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>I hope you have enjoyed reading this word vomit of a blog post about submitting to ENA. I hope it is useful to someone. Future me at the very least will be grateful for it. If you have any questions, please feel free to get in touch.</p>
</section>
<section id="extras" class="level2">
<h2 class="anchored" data-anchor-id="extras">Extras</h2>
<section id="permitted-values-for-platform-of-a-manifest-file" class="level3">
<h3 class="anchored" data-anchor-id="permitted-values-for-platform-of-a-manifest-file">Permitted values for platform of a manifest file</h3>
<ul>
<li>BGISEQ: Sequencers based on DNBSEQ by MGI Tech.</li>
<li>CAPILLARY: Sequencers based on capillary electrophoresis technology manufactured by LifeTech (formerly Applied BioSciences).</li>
<li>DNBSEQ: Uses DNA nanoballs(DNB) and regular array chips.</li>
<li>ELEMENT: Element Biosciences uses avidity sequencing: a polymerase inserts nucleotides, detected using fluorescence.</li>
<li>HELICOS: Helicos is similar to 454 technology - uses 1-color sequential flows.</li>
<li>ILLUMINA: 54 technology use 1-color sequential flows: 454 technology use 1-color sequential flows.</li>
<li>ION_TORRENT: Ion Torrent Personal Genome Machine (PGM) from Life Technologies. Directly translates chemically encoded information (A, C, G, T) into digital on semiconductor chip.</li>
<li>LS454: 454 technology use 1-color sequential flows.</li>
<li>OXFORD_NANOPORE: Oxford Nanopore platform type. nanopore-based electronic single molecule analysis.</li>
<li>PACBIO_SMRT: PacificBiosciences platform type for the single molecule real time (SMRT) technology.</li>
<li>ULTIMA: Ultima Genomics platform type. Flowing one nucleotide at a time in order, iteratively.</li>
</ul>
</section>
<section id="permitted-value-for-instrument-of-a-manifest-file" class="level3">
<h3 class="anchored" data-anchor-id="permitted-value-for-instrument-of-a-manifest-file">Permitted value for instrument of a manifest file</h3>
<ul>
<li>454 GS</li>
<li>454 GS 20</li>
<li>454 GS FLX</li>
<li>454 GS FLX Titanium</li>
<li>454 GS FLX+</li>
<li>454 GS Junior</li>
<li>AB 310 Genetic Analyzer</li>
<li>AB 3130 Genetic Analyzer</li>
<li>AB 3130xL Genetic Analyzer</li>
<li>AB 3500 Genetic Analyzer</li>
<li>AB 3500xL Genetic Analyzer</li>
<li>AB 3730 Genetic Analyzer</li>
<li>AB 3730xL Genetic Analyzer</li>
<li>AB 5500 Genetic Analyzer</li>
<li>AB 5500xl Genetic Analyzer</li>
<li>AB 5500xl-W Genetic Analysis System</li>
<li>BGISEQ-50</li>
<li>BGISEQ-500</li>
<li>DNBSEQ-G400</li>
<li>DNBSEQ-G400 FAST</li>
<li>DNBSEQ-G50</li>
<li>DNBSEQ-T7</li>
<li>Element AVITI</li>
<li>GridION</li>
<li>Helicos HeliScope</li>
<li>HiSeq X Five</li>
<li>HiSeq X Ten</li>
<li>Illumina Genome Analyzer</li>
<li>Illumina Genome Analyzer II</li>
<li>Illumina Genome Analyzer IIx</li>
<li>Illumina HiScanSQ</li>
<li>Illumina HiSeq 1000</li>
<li>Illumina HiSeq 1500</li>
<li>Illumina HiSeq 2000</li>
<li>Illumina HiSeq 2500</li>
<li>Illumina HiSeq 3000</li>
<li>Illumina HiSeq 4000</li>
<li>Illumina HiSeq X</li>
<li>Illumina MiSeq</li>
<li>Illumina MiniSeq</li>
<li>Illumina NovaSeq 6000</li>
<li>Illumina NovaSeq X</li>
<li>Illumina iSeq 100</li>
<li>Ion GeneStudio S5</li>
<li>Ion GeneStudio S5 Plus</li>
<li>Ion GeneStudio S5 Prime</li>
<li>Ion Torrent Genexus</li>
<li>Ion Torrent PGM</li>
<li>Ion Torrent Proton</li>
<li>Ion Torrent S5</li>
<li>Ion Torrent S5 XL</li>
<li>MGISEQ-2000RS</li>
<li>MinION</li>
<li>NextSeq 1000</li>
<li>NextSeq 2000</li>
<li>NextSeq 500</li>
<li>NextSeq 550</li>
<li>PacBio RS</li>
<li>PacBio RS II</li>
<li>PromethION</li>
<li>Sequel</li>
<li>Sequel II</li>
<li>Sequel IIe</li>
<li>UG 100</li>
<li>unspecified</li>
</ul>
</section>
<section id="permitted-values-for-library-selection" class="level3">
<h3 class="anchored" data-anchor-id="permitted-values-for-library-selection">Permitted values for library selection</h3>
<ul>
<li>RANDOM: No Selection or Random selection</li>
<li>PCR: target enrichment via PCR</li>
<li>RANDOM PCR: Source material was selected by randomly generated primers.</li>
<li>RT-PCR: target enrichment via</li>
<li>HMPR: Hypo-methylated partial restriction digest</li>
<li>MF: Methyl Filtrated</li>
<li>repeat fractionation: Selection for less repetitive (and more gene rich) sequence through Cot filtration (CF) or other fractionation techniques based on DNA kinetics.</li>
<li>size fractionation: Physical selection of size appropriate targets.</li>
<li>MSLL: Methylation Spanning Linking Library</li>
<li>cDNA: PolyA selection or enrichment for messenger RNA (mRNA); synonymize with PolyA</li>
<li>cDNA_randomPriming:</li>
<li>cDNA_oligo_dT:</li>
<li>PolyA: PolyA selection or enrichment for messenger RNA (mRNA); should replace cDNA enumeration.</li>
<li>Oligo-dT: enrichment of messenger RNA (mRNA) by hybridization to Oligo-dT.</li>
<li>Inverse rRNA: depletion of ribosomal RNA by oligo hybridization.</li>
<li>Inverse rRNA selection: depletion of ribosomal RNA by inverse oligo hybridization.</li>
<li>ChIP: Chromatin immunoprecipitation</li>
<li>ChIP-Seq: Chromatin immunoPrecipitation, reveals binding sites of specific proteins, typically transcription factors (TFs) using antibodies to extract DNA fragments bound to the target protein.</li>
<li>MNase: Identifies well-positioned nucleosomes. uses Micrococcal Nuclease (MNase) is an endo-exonuclease that processively digests DNA until an obstruction, such as a nucleosome, is reached.</li>
<li>DNase: DNase I endonuclease digestion and size selection reveals regions of chromatin where the DNA is highly sensitive to DNase I.</li>
<li>Hybrid Selection: Selection by hybridization in array or solution.</li>
<li>Reduced Representation: Reproducible genomic subsets, often generated by restriction fragment size selection, containing a manageable number of loci to facilitate re-sampling.</li>
<li>Restriction Digest: DNA fractionation using restriction enzymes.</li>
<li>5-methylcytidine antibody: Selection of methylated DNA fragments using an antibody raised against 5-methylcytosine or 5-methylcytidine (m5C).</li>
<li>MBD2 protein methyl-CpG binding domain: Enrichment by methyl-CpG binding domain.</li>
<li>CAGE: Cap-analysis gene expression.</li>
<li>RACE: Rapid Amplification of cDNA Ends.</li>
<li>MDA: Multiple Displacement Amplification, a non-PCR based DNA amplification technique that amplifies a minute quantifies of DNA to levels suitable for genomic analysis.</li>
<li>padlock probes capture method: Targeted sequence capture protocol covering an arbitrary set of nonrepetitive genomics targets. An example is capture bisulfite sequencing using padlock probes (BSPP).</li>
<li>other: Other library enrichment, screening, or selection process.</li>
<li>unspecified: Library enrichment, screening, or selection is not specified.</li>
</ul>
<section id="permitted-values-for-library-source" class="level4">
<h4 class="anchored" data-anchor-id="permitted-values-for-library-source">Permitted values for library source</h4>
<ul>
<li>GENOMIC: Genomic DNA (includes PCR products from genomic DNA).</li>
<li>GENOMIC SINGLE CELL</li>
<li>TRANSCRIPTOMIC: Transcription products or non genomic DNA (EST, cDNA, RT-PCR, screened libraries).</li>
<li>TRANSCRIPTOMIC SINGLE CELL:</li>
<li>METAGENOMIC: Mixed material from metagenome.</li>
<li>METATRANSCRIPTOMIC: Transcription products from community targets</li>
<li>SYNTHETIC: Synthetic DNA.</li>
<li>VIRAL RNA: Viral RNA.</li>
<li>OTHER: Other, unspecified, or unknown library source material.</li>
</ul>
</section>
</section>
<section id="permitted-values-for-library-strategy" class="level3">
<h3 class="anchored" data-anchor-id="permitted-values-for-library-strategy">Permitted values for library strategy</h3>
<ul>
<li>WGS: Whole Genome Sequencing - random sequencing of the whole genome (see pubmed 10731132 for details)</li>
<li>WGA: Whole Genome Amplification followed by random sequencing. (see pubmed 1631067,8962113 for details)</li>
<li>WXS: Random sequencing of exonic regions selected from the genome. (see pubmed 20111037 for details)</li>
<li>RNA-Seq: Random sequencing of whole transcriptome, also known as Whole Transcriptome Shotgun Sequencing, or WTSS). (see pubmed 18611170 for details)</li>
<li>ssRNA-seq: Strand-specific RNA sequencing.</li>
<li>miRNA-Seq: Micro RNA sequencing strategy designed to capture post-transcriptional RNA elements and include non-coding functional elements. (see pubmed 21787409 for details)</li>
<li>ncRNA-Seq: Capture of other non-coding RNA types, including post-translation modification types such as snRNA (small nuclear RNA) or snoRNA (small nucleolar RNA), or expression regulation types such as siRNA (small interfering RNA) or piRNA/piwi/RNA (piwi-interacting RNA).</li>
<li>FL-cDNA: Full-length sequencing of cDNA templates</li>
<li>EST: Single pass sequencing of cDNA templates</li>
<li>Hi-C: Chromosome Conformation Capture technique where a biotin-labeled nucleotide is incorporated at the ligation junction, enabling selective purification of chimeric DNA ligation junctions followed by deep sequencing.</li>
<li>ATAC-seq: Assay for Transposase-Accessible Chromatin (ATAC) strategy is used to study genome-wide chromatin accessibility. alternative method to DNase-seq that uses an engineered Tn5 transposase to cleave DNA and to integrate primer DNA sequences into the cleaved genomic DNA.</li>
<li>WCS: Random sequencing of a whole chromosome or other replicon isolated from a genome.</li>
<li>RAD-Seq:</li>
<li>CLONE: Genomic clone based (hierarchical) sequencing.</li>
<li>POOLCLONE: Shotgun of pooled clones (usually BACs and Fosmids).</li>
<li>AMPLICON: Sequencing of overlapping or distinct PCR or RT-PCR products. For example, metagenomic community profiling using SSU rRNA.</li>
<li>CLONEEND: Clone end (5’, 3’, or both) sequencing.</li>
<li>FINISHING: Sequencing intended to finish (close) gaps in existing coverage.</li>
<li>ChIP-Seq: ChIP-seq, Chromatin ImmunoPrecipitation, reveals binding sites of specific proteins, typically transcription factors (TFs) using antibodies to extract DNA fragments bound to the target protein.</li>
<li>MNase-Seq: Identifies well-positioned nucleosomes. uses Micrococcal Nuclease (MNase) is an endo-exonuclease that processively digests DNA until an obstruction, such as a nucleosome, is reached.</li>
<li>Ribo-Seq: Ribosome profiling (also named ribosome footprinting) uses specialized messenger RNA (mRNA) sequencing to determine which mRNAs are being actively translated and produces a “global snapshot” of all the ribosomes active in a cell at a particular moment, known as a translatome.</li>
<li>DNase-Hypersensitivity: Sequencing of hypersensitive sites, or segments of open chromatin that are more readily cleaved by DNaseI.</li>
<li>Bisulfite-Seq: MethylC-seq. Sequencing following treatment of DNA with bisulfite to convert cytosine residues to uracil depending on methylation status.</li>
<li>CTS: Concatenated Tag Sequencing</li>
<li>MRE-Seq: Methylation-Sensitive Restriction Enzyme Sequencing.</li>
<li>MeDIP-Seq: Methylated DNA Immunoprecipitation Sequencing.</li>
<li>MBD-Seq: Methyl CpG Binding Domain Sequencing.</li>
<li>Tn-Seq: Quantitatively determine fitness of bacterial genes based on how many times a purposely seeded transposon gets inserted into each gene of a colony after some time.</li>
<li>VALIDATION: CGHub special request: Independent experiment to re-evaluate putative variants.</li>
<li>FAIRE-seq: Formaldehyde Assisted Isolation of Regulatory Elements. Reveals regions of open chromatin.</li>
<li>SELEX: Systematic Evolution of Ligands by Exponential enrichment</li>
<li>RIP-Seq: Direct sequencing of RNA immunoprecipitates (includes CLIP-Seq, HITS-CLIP and PAR-CLIP).</li>
<li>ChIA-PET: Direct sequencing of proximity-ligated chromatin immunoprecipitates.</li>
<li>Synthetic-Long-Read: binning and barcoding of large DNA fragments to facilitate assembly of the fragment</li>
<li>Targeted-Capture: Enrichment of a targeted subset of loci.</li>
<li>Tethered Chromatin Conformation Capture:</li>
<li>OTHER: Library strategy not listed.</li>
</ul>


</section>
</section>

 ]]></description>
  <category>sequencing</category>
  <category>ENA</category>
  <category>R</category>
  <category>bash</category>
  <guid>https://padpadpadpad.netlify.app/posts/ena_file_submission/</guid>
  <pubDate>Wed, 29 Nov 2023 00:00:00 GMT</pubDate>
  <media:content url="https://padpadpadpad.netlify.app/posts/ena_file_submission/preview.png" medium="image" type="image/png" height="86" width="144"/>
</item>
<item>
  <title>Recreate Ed Hawkins’ climate spiral in R</title>
  <dc:creator>Daniel Padfield</dc:creator>
  <link>https://padpadpadpad.netlify.app/posts/climate_spiral/</link>
  <description><![CDATA[ 





<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Climate change is happening, and changes in average temperatures are happening quickly. The 5 hottest years on record have occurred in the last six years for which we have data. One of the best ways to demonstrate climate warming is through data visualisations, and one of the best examples of this are Ed Hawkins’ <a href="https://www.reading.ac.uk/planet/climate-resources/climate-stripes">climate stripes</a>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/climate_spiral/climate-stripes.jpg" class="img-fluid figure-img"></p>
<figcaption>Ed Hawkins’ Climate Stripes</figcaption>
</figure>
</div>
<p>This visualisation is made up of vertical stripes, each representing the average temperature for a single year, relative to the average temperature over the whole period (from 1880 to the most recent year for which we have data). Blue colours indicate cooler-than-average years, while red colours indicate years that were hotter than average. As you can see, the increasing redness on the right-hand side of the graphic shows the rapid heating over recent years.</p>
<p>I love the simplicity of this graphic, and it has proved a very effective tool for improving people’s awareness of climate warming (see the <a href="https://twitter.com/search?q=%23climatestripes&amp;src=typed_query&amp;f=top">#climatestripes</a> for amazing examples of its use across the world).</p>
<p>I also loved the climate spiral animation created by Ed and re-created by <a href="https://climate.nasa.gov/climate_resources/300/video-climate-spiral/">NASA</a> to help people understand the concept of global warming and the change in global temperatures over time. The spiral presents a visual representation of temperature changes over the past century or more, by showing a line that spirals outwards from the center of the graph as time progresses.</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/jWoCXLuTIkI" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p>In the centre of the spiral is the average temperature of a baseline period, typically the 20th century average. As the line moves outwards, the temperature increases, with each full rotation of the spiral representing one year of data. The thickness of the line represents the magnitude of the temperature change in each year, with thicker lines indicating larger temperature increases.</p>
<p>Having played with <strong>ggplot2</strong> and <strong>gganimate</strong> a bit, I was interested if I could recreate this animation in R (unfortunately without the amazing axis flip at the end)!</p>
</section>
<section id="make-the-climate-spiral-in-r" class="level2">
<h2 class="anchored" data-anchor-id="make-the-climate-spiral-in-r">Make the climate spiral in R</h2>
<p><em>At the time of writing this blog post, using <strong>gganimate</strong> for <strong>geom_path()</strong> and <strong>transition_reveal()</strong> is <a href="https://github.com/thomasp85/gganimate/issues/473">unfortunately bugged</a> in version 1.0.8, meaning that some frames would be missing. As such we will install a previous version (1.0.7).</em></p>
<p>This post will walkthrough how to recreate Ed Hawkins’ famous climate spiral in R. We will mainly use the <strong>tidyverse</strong> packages and <strong>gganimate</strong> to do this. Firstly we will load in these required packages.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load packages</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gganimate) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remotes::install_github('thomasp85/gganimate@v1.0.7')</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(janitor)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(MetBrewer)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggforce)</span></code></pre></div>
</div>
<p>We can next load in the dataset used from the NASA website.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load in dataset from NASA</span></span>
<span id="cb2-2">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://data.giss.nasa.gov/gistemp/tabledata_v4/GLB.Ts+dSST.csv'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">skip =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  Year   Jan  Feb  Mar  Apr  May  Jun  Jul  Aug  Sep  Oct  Nov  Dec  J.D  D.N
1 1880 -0.18 -.24 -.09 -.16 -.10 -.21 -.18 -.10 -.15 -.23 -.22 -.17 -.17  ***
2 1881 -0.19 -.14  .03  .05  .06 -.18  .00 -.03 -.15 -.22 -.18 -.07 -.09 -.09
3 1882  0.16  .14  .04 -.16 -.14 -.22 -.17 -.08 -.15 -.23 -.17 -.36 -.11 -.09
4 1883 -0.29 -.37 -.12 -.18 -.18 -.07 -.07 -.14 -.22 -.11 -.24 -.11 -.18 -.20
5 1884 -0.13 -.08 -.36 -.40 -.34 -.35 -.30 -.28 -.27 -.25 -.33 -.31 -.28 -.27
6 1885 -0.58 -.33 -.26 -.42 -.45 -.43 -.34 -.31 -.28 -.23 -.24 -.10 -.33 -.35
   DJF  MAM  JJA  SON
1  *** -.11 -.16 -.20
2 -.17  .05 -.07 -.18
3  .08 -.08 -.16 -.18
4 -.34 -.16 -.10 -.19
5 -.11 -.37 -.31 -.28
6 -.41 -.38 -.36 -.25</code></pre>
</div>
</div>
<p>This dataset has month across the top with some other columns I do not necessarily understand, and the values in the month columns are the temperature anomaly. Right now all the columns have been read in character format, so we can do some data wrangling to get the data in the correct format for <strong>ggplot2</strong>. This includes going from wide to long format, stacking all the months on top of each other in a single column.</p>
<p>These commands could all be linked together using successive pipe commands, but I kept them separate to better document what each line is doing.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># wrangle the data set</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make all columns numeric - there are some *** that i dont know what they mean</span></span>
<span id="cb4-3">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(d, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>(), as.numeric))</span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># replace NAs with 0 - just make them to have no positive or negative anomaly</span></span>
<span id="cb4-6">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(d, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>(), <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replace_na</span>(.x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))))</span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tidy the dataframe</span></span>
<span id="cb4-9">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> janitor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>(d) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> jan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>dec, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'month'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'anomaly'</span>)</span>
<span id="cb4-11"></span>
<span id="cb4-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add a time column</span></span>
<span id="cb4-13">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(d, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(year, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toupper</span>(month), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>),</span>
<span id="cb4-14">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> lubridate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ym</span>(time),</span>
<span id="cb4-15">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">month2 =</span> lubridate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">month</span>(time)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># select only necessary columns</span></span>
<span id="cb4-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(year, month, month2, time, anomaly)</span>
<span id="cb4-18"></span>
<span id="cb4-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># look at dataset</span></span>
<span id="cb4-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 5
   year month month2 time       anomaly
  &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;date&gt;       &lt;dbl&gt;
1  1880 jan        1 1880-01-01   -0.18
2  1880 feb        2 1880-02-01   -0.24
3  1880 mar        3 1880-03-01   -0.09
4  1880 apr        4 1880-04-01   -0.16
5  1880 may        5 1880-05-01   -0.1 
6  1880 jun        6 1880-06-01   -0.21</code></pre>
</div>
</div>
<p>The most recent data in the spreadsheet from 2023, but we will remove this at the moment because it is mid-year.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove 2023</span></span>
<span id="cb6-2">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(d, year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2023</span>)</span></code></pre></div>
</div>
<p>We are now ready to make our first plot. I have chosen a <a href="https://github.com/BlakeRMills/MetBrewer">MetBrewer</a> colour palette which goes from blue to red to represent the hot and cold colours. For the plot I will use a theme I defined previously in a random <a href="https://github.com/padpadpadpad/MicrobioUoE">R package</a> called <strong>theme_black()</strong> (lots of other themes are available).</p>
<div class="cell" data-layout-align="centre">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create first plot</span></span>
<span id="cb7-2">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(d, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(month2, anomaly, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> anomaly)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> year)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_gradientn</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature anomaly'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colors =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">met.brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Homer1'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.order =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-5">  MicrobioUoE<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_black</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.grid.major =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb7-7">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Jan'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Feb'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mar'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Apr'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'May'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Jun'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Jul'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Aug'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sep'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Oct'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Nov'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Dec'</span>))</span>
<span id="cb7-9"></span>
<span id="cb7-10">p1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_polar</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-centre">
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/climate_spiral/index_files/figure-html/first_plot-1.png" class="img-fluid quarto-figure quarto-figure-centre figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>This is looking quite good, but still quite far from the polished version on NASA’s YouTube. One of the problems we have is that <strong>geom_path()</strong> will not cross over the 0-360 line when using <strong>coord_polar()</strong>. This would ruin the whole visualisation and prevent us having a smooth transition from year to year. This was a problem I was not clever enough to solve, but luckily <a href="https://stackoverflow.com/questions/55132352/geom-path-refuses-to-cross-over-the-0-360-line-in-coord-polar">StackOverflow</a> had the answer. We need to convert the polar coordinates to cartesian to allow the animation to go from December to January of the next year.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># want to convert polar coordinates to cartesian to allow animation to go from December back to January</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># using this link https://stackoverflow.com/questions/55132352/geom-path-refuses-to-cross-over-the-0-360-line-in-coord-polar</span></span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculate angles for each month, starting with January at 15º</span></span>
<span id="cb8-5">angles <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">month =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>month),</span>
<span id="cb8-6">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>))</span>
<span id="cb8-7"></span>
<span id="cb8-8">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(d, angles)</span>
<span id="cb8-9"></span>
<span id="cb8-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 6
   year month month2 time       anomaly angle
  &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;date&gt;       &lt;dbl&gt; &lt;dbl&gt;
1  1880 jan        1 1880-01-01   -0.18    15
2  1880 feb        2 1880-02-01   -0.24    45
3  1880 mar        3 1880-03-01   -0.09    75
4  1880 apr        4 1880-04-01   -0.16   105
5  1880 may        5 1880-05-01   -0.1    135
6  1880 jun        6 1880-06-01   -0.21   165</code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add buffer to make everything positive - this can be anything really</span></span>
<span id="cb10-2">buffer <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculate the position in x/y space for each anomaly using maths!!!</span></span>
<span id="cb10-5">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(d, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_anomaly =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sin</span>(pi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> angle<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (anomaly <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> buffer),</span>
<span id="cb10-6">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_anomaly =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cos</span>(pi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> angle<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (anomaly <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> buffer))</span>
<span id="cb10-7"></span>
<span id="cb10-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 8
   year month month2 time       anomaly angle x_anomaly y_anomaly
  &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;date&gt;       &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;
1  1880 jan        1 1880-01-01   -0.18    15     0.730     2.72 
2  1880 feb        2 1880-02-01   -0.24    45     1.95      1.95 
3  1880 mar        3 1880-03-01   -0.09    75     2.81      0.753
4  1880 apr        4 1880-04-01   -0.16   105     2.74     -0.735
5  1880 may        5 1880-05-01   -0.1    135     2.05     -2.05 
6  1880 jun        6 1880-06-01   -0.21   165     0.722    -2.69 </code></pre>
</div>
</div>
<p>We now have the position of each anomaly for each month in x/y space. This should allow the animation to smoothly move between December of one year to January of the next.</p>
<p>Our original plot also does not have very nice labelling to tell us anything about the extent of the anomaly (1ºC above or below average etc.)</p>
<p>However, we can add these ourselves by using some functions from <strong>ggforce</strong> to create circles on our plot and labelling them. We also create a dataframe to place the months at a nicer place on the plot.</p>
<p>We can control the font size of <strong>geom_text()</strong> in terms of font size used in the rest of the plot using the <strong>pts()</strong> function that I copied from <a href="https://www.andrewheiss.com/">Andrew Heiss</a>.</p>
<div class="cell" data-layout-align="centre">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create limits</span></span>
<span id="cb12-2">limits <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>anomaly) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> buffer), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>anomaly) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> buffer)</span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create circles for some temperatures</span></span>
<span id="cb12-5">circles <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb12-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(buffer, buffer <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, buffer <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(r, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb12-8">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb12-9">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb12-10">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0ºC'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'+1ºC'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-1ºC'</span>))</span>
<span id="cb12-11"></span>
<span id="cb12-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create dataset for months to be added to the plot</span></span>
<span id="cb12-13">months <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(angles, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">anomaly =</span> limits[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> limits[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb12-14">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_anomaly =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sin</span>(pi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> angle<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> anomaly,</span>
<span id="cb12-15">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_anomaly =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cos</span>(pi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> angle<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> anomaly)</span>
<span id="cb12-16"></span>
<span id="cb12-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># increase limits slightly</span></span>
<span id="cb12-18">limits <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> limits <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> limits<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-19"></span>
<span id="cb12-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create base plot</span></span>
<span id="cb12-21">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(d, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x_anomaly, y_anomaly)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> limits) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> limits) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-24">  ggforce<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_no_axes</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>), </span>
<span id="cb12-26">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x_anomaly, y_anomaly, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> month), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> months, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> MicrobioUoE<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pts</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_path</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> anomaly), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_gradientn</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature anomaly'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colors =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">met.brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Homer1'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.order =</span> F)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-30">  ggforce<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_circle</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> x0, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y0 =</span> y0, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">I</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> circles, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_label</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(x0, r, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> label), circles, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> MicrobioUoE<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pts</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_equal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> year, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> anomaly), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> MicrobioUoE<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pts</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>))</span>
<span id="cb12-34"></span>
<span id="cb12-35">p1</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-centre">
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/climate_spiral/index_files/figure-html/make_new_plot-1.png" class="img-fluid quarto-figure quarto-figure-centre figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>This looks great and more like what NASA created. We can easily animate this using <strong>gganimate::transition_reveal()</strong> and adding the column for time that we created earlier.</p>
<p>We can add a frame for every single row of the dataframe using <code>nframes = nrow(d)</code>. We will also add a point to make it more obvious where we are at any given time.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add animation layer using gganimate</span></span>
<span id="cb13-2">p_anim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transition_reveal</span>(time)</span>
<span id="cb13-5"></span>
<span id="cb13-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save out the animation</span></span>
<span id="cb13-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anim_save</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filename =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'posts/climate_spiral/climate_spiral.gif'</span>, p_anim, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nframes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(d), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">duration =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'in'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">renderer =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gifski_renderer</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">res =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)</span></code></pre></div>
</div>
<p><img src="https://padpadpadpad.netlify.app/posts/climate_spiral/climate_spiral.gif" class="img-fluid"></p>
<p>This looks amazing! There are probably ways I could improve the animation but this suits my motivations right now. For example, I have not linked the size of the line to the extent of the change, but this should be relatively easy to implement.</p>
<p>I generally love this type of visualisation, and the spiral could be used on other data, such as atmospheric carbon dioxide levels or Arctic sea ice extent, to show how these variables have changed through time. By presenting data in this way, the Climate Spiral helps people to understand the steady, consistent increase in global temperatures over time, and the urgency of addressing climate change.</p>
<p>Let me know if you found this helpful and if you any questions!</p>


</section>

 ]]></description>
  <category>R</category>
  <category>ggplot2</category>
  <category>climate change</category>
  <category>gganimate</category>
  <category>climate spiral</category>
  <guid>https://padpadpadpad.netlify.app/posts/climate_spiral/</guid>
  <pubDate>Thu, 16 Feb 2023 00:00:00 GMT</pubDate>
  <media:content url="https://padpadpadpad.netlify.app/posts/climate_spiral/preview.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Rolling regression to estimate microbial growth rate</title>
  <dc:creator>Daniel Padfield</dc:creator>
  <link>https://padpadpadpad.netlify.app/posts/rolling_regression/</link>
  <description><![CDATA[ 





<section id="introduction" class="level3">
<h3 class="anchored" data-anchor-id="introduction">Introduction</h3>
<p>Microbial ecologists often measure the growth rates of their favourite microbes, commonly using an OD (optical density) reader, with growth being related to the increasing OD of the sample through time. There are loads of ways to analyse these curves. Most of these, like <a href="https://github.com/sprouffske/growthcurver"><strong>growthcurver</strong></a> and the methods I used in my recent <a href="https://github.com/padpadpadpad/Padfield_2019_ISME_bact_phage_temperature">ISME</a> paper (<a href="https://github.com/padpadpadpad/nls.multstart"><strong>nls.multstart</strong></a> and functions from <a href="https://cran.r-project.org/web/packages/nlsMicrobio/nlsMicrobio.pdf"><strong>nlsMicrobio</strong></a>), fit models to logistic growth. Both methods can easily be scaled up to fit multiple curves at the same time.</p>
<p>However, sometimes these methods do not do a good job. The most common example when this happens is if the wee critters do not reach stationary phase. Without stationary phase, most of the models will struggle to calculate carrying capacity, which also means the estimated exponential growth rate is poor. Similar things can occur if the bacteria form biofilms. This can result in increasingly noisy measurements at higher OD readings, again making the estimation of carrying capacity and growth rates more difficult.</p>
<p>As an alternative, we can bin off trying to model the entire growth curve, and instead implement a rolling regression, where we fit a linear regression on a shifting window of points. On natural-log transformed OD, the slope of the regression between <img src="https://latex.codecogs.com/png.latex?logOD"> and time is equivalent to the exponential growth rate.</p>
</section>
<section id="get-started" class="level3">
<h3 class="anchored" data-anchor-id="get-started">Get started</h3>
<p>We will load (and install) all the packages needed to run the example here. We will use the example data from <strong>growthcurver</strong> as example OD readings from a 96-well plate. Time is in hours, and I have created stacked all the wells into a single column for OD. Finally I created a column for <img src="https://latex.codecogs.com/png.latex?logOD">, which is needed for the rolling regression, and <img src="https://latex.codecogs.com/png.latex?log_%7B10%7DOD"> which is needed for fitting the modified gompertz growth model from <strong>nlsMicrobio</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load packages</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#install.packages(tidyverse)</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(zoo) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#install.packages(zoo)</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(broom) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#install.packages(broom)</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(growthcurver) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages(growthcurver)</span></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(nls.multstart) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages(nls.multstart)</span></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remotes::install_github('padpadpadpad/MicrobioUoE)</span></span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load example data</span></span>
<span id="cb1-10">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> growthcurver<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>growthdata <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather</span>(., well, od, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>time) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ln_od =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(od),</span>
<span id="cb1-13">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log10_od =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log10</span>(od))</span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># have a look at the data</span></span>
<span id="cb1-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 13,920
Columns: 5
$ time     &lt;dbl&gt; 0.0000000, 0.1666667, 0.3333333, 0.5000000, 0.6666667, 0.8333…
$ well     &lt;chr&gt; "A1", "A1", "A1", "A1", "A1", "A1", "A1", "A1", "A1", "A1", "…
$ od       &lt;dbl&gt; 0.05348585, 0.04800336, 0.05587451, 0.05131749, 0.04516719, 0…
$ ln_od    &lt;dbl&gt; -2.928338, -3.036484, -2.884647, -2.969724, -3.097384, -2.938…
$ log10_od &lt;dbl&gt; -1.271761, -1.318728, -1.252786, -1.289735, -1.345177, -1.276…</code></pre>
</div>
</div>
</section>
<section id="fit-modified-gompertz-model-for-bacterial-growth" class="level3">
<h3 class="anchored" data-anchor-id="fit-modified-gompertz-model-for-bacterial-growth">Fit modified gompertz model for bacterial growth</h3>
<p>We will first demonstrate rolling regression against the modified gompertz model for growth. I like the inclusion of the lag parameter in this model, especially for OD readers where the initial inoculate can often be so low that the OD reader cannot measure it. It means that exponential growth is only calculated at OD readings that we are confident represent changes in biomass of the bacteria.</p>
<p>To do this, we’ll filter the data for just the first well, A1. Then we will fit the modified gompertz model and plot the results.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># filter for just a single well</span></span>
<span id="cb3-2">d_a1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(d, well <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'A1'</span>)</span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define gompertz growth model</span></span>
<span id="cb3-4">gompertz <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(log10_nmax, log10_n0, mumax, t, lag){</span>
<span id="cb3-5">  log10_n0 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (log10_nmax <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> log10_n0) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(mumax <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (lag <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> t)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>((log10_nmax <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> log10_n0) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb3-6">}</span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fit gompertz model</span></span>
<span id="cb3-8">fit_gomp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> nls.multstart<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nls_multstart</span>(log10_od <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gompertz</span>(log10_nmax, log10_n0, mumax, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">t =</span> time, lag),</span>
<span id="cb3-9">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d_a1,</span>
<span id="cb3-10">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">start_lower =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log10_nmax =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log10_n0 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mumax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lag =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb3-11">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">start_upper =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log10_nmax =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log10_n0 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mumax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lag =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>),</span>
<span id="cb3-12">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log10_nmax =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log10_n0 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mumax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lag =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb3-13">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>,</span>
<span id="cb3-14">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">supp_errors =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y'</span>)</span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get predictions</span></span>
<span id="cb3-16">gomp_preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">augment</span>(fit_gomp)</span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot on original scale</span></span>
<span id="cb3-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(d_a1, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(time, od)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(time, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>.fitted), gomp_preds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time (hours)'</span>,</span>
<span id="cb3-23">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'OD'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'text'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.37</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'µ = '</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(fit_gomp)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' hr-1'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> MicrobioUoE<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pts</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>))</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/rolling_regression/index_files/figure-html/plot_gompz-1.png" class="img-fluid figure-img" width="768"></p>
</figure>
</div>
</div>
</div>
<p>However, lets say our measurements end at 10 or 11 hours. When we have not reached stationary phase, the traditional bacterial growth models are likely to have trouble fitting.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">d_a1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(d_a1, time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10.5</span>)</span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot data without stationary phase</span></span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(d_a1, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(time, od)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time (hours)'</span>,</span>
<span id="cb4-7">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'OD'</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/rolling_regression/index_files/figure-html/plot_short-1.png" class="img-fluid figure-img" width="768"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="using-rolling-regression" class="level3">
<h3 class="anchored" data-anchor-id="using-rolling-regression">Using rolling regression</h3>
<p>Rolling regression allows us to calculate exponential growth rate even when we do not have the whole curve. First, we need to create our own rolling regression function. This method is mainly taken from G. Grothendieck’s <a href="https://stackoverflow.com/questions/49762128/rolling-regression-by-group-in-the-tidyverse">StackOverflow answer</a>. In the function, we specify our output from a standard <strong>lm</strong> object. So if you know how to access the output of <strong>lm()</strong>, you can add any extra details you want.</p>
<p>One of the big decisions in rolling regression is deciding how many points you are going to calculate the growth rate over. In this example, measurements are taken every 0.167 hours, about every ten minutes. I want a shifting window to span a minimum of 1.5 hours, so I calculate <code>num_points</code> to define the number of points the rolling regression will act on.</p>
<p>We then run the rolling regression, using <strong>zoo::rollapplyr()</strong> and <strong>dplyr::do()</strong>. Finally, in order to illustrate what the rolling regression is doing, I created a predictions dataframe for every single linear model that is fitted.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create the rolling regression function</span></span>
<span id="cb5-2">roll_regress <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x){</span>
<span id="cb5-3">  temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(x)</span>
<span id="cb5-4">  mod <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(temp)</span>
<span id="cb5-5">  temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(mod)[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]],</span>
<span id="cb5-6">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope_lwr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">confint</span>(mod)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, ][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]],</span>
<span id="cb5-7">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope_upr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">confint</span>(mod)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, ][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]],</span>
<span id="cb5-8">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intercept =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(mod)[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]],</span>
<span id="cb5-9">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rsq =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(mod)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>r.squared, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stringsAsFactors =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(temp)</span>
<span id="cb5-11">}</span>
<span id="cb5-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define window - here every ~1.5 hours</span></span>
<span id="cb5-13">num_points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ceiling</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.167</span>)) </span>
<span id="cb5-14"></span>
<span id="cb5-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run rolling regression on ln od ~ time</span></span>
<span id="cb5-16">models <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d_a1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(., ln_od, time) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-18">           zoo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rollapplyr</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> num_points, roll_regress, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by.column =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>),</span>
<span id="cb5-19">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(., time),</span>
<span id="cb5-20">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ln_od =</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(., ln_od))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename_all</span>(., gsub, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'model.'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replacement =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb5-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create predictions</span></span>
<span id="cb5-23">preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> models <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(., <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(slope)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(time) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, .<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(., models) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred =</span> (slope<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>time2) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> intercept)</span></code></pre></div>
</div>
<p>We can plot the rolling regression through time. I have extracted the exponential growth rate as the maximum slope of any of the regressions. Reassuringly the value of <img src="https://latex.codecogs.com/png.latex?%5Cmu"> we get is very similar to that of using the gompertz model. I have also plotted the time at which the maximum slope occurred. It looks pretty close to mid-log to me.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculate the exponential growth rate</span></span>
<span id="cb6-2">growth_rate <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(models, slope <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(slope, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot rolling regression</span></span>
<span id="cb6-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(d_a1, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(time, ln_od)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(time2, pred, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> time), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, preds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> ln_od), growth_rate) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> ln_od, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> ln_od), growth_rate) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'text'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'µ = '</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(growth_rate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>slope, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' hr-1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">95%CI:('</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(growth_rate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>slope_lwr, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(growth_rate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>slope_upr, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">')'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> MicrobioUoE<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pts</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time (hours)'</span>,</span>
<span id="cb6-12">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'OD'</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/rolling_regression/index_files/figure-html/plot-1.png" class="img-fluid figure-img" width="768"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="the-opportunities-are-endless" class="level3">
<h3 class="anchored" data-anchor-id="the-opportunities-are-endless">The opportunities are endless</h3>
<p>The great thing about this approach is its flexibility. It can easily be rolled out over all the wells in that plate, using <strong>group_by()</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run rolling regression on ln od_cor ~ time</span></span>
<span id="cb7-2">models <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(well) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(., ln_od, time) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-5">           zoo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rollapplyr</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> num_points, roll_regress, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by.column =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>),</span>
<span id="cb7-6">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(., time),</span>
<span id="cb7-7">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ln_od =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(., ln_od))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename_all</span>(., gsub, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'model.'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replacement =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculate growth rate for each one</span></span>
<span id="cb7-10">growth_rates <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> models <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(slope <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(slope, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span></code></pre></div>
</div>
<pre><code>|===========================================|100% ~0 s remaining </code></pre>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(models)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 13,920
Columns: 8
Groups: well [96]
$ well      &lt;chr&gt; "A1", "A1", "A1", "A1", "A1", "A1", "A1", "A1", "A1", "A1", …
$ slope     &lt;dbl&gt; NA, NA, NA, NA, -0.077427705, -0.028208492, -0.021245636, 0.…
$ slope_lwr &lt;dbl&gt; NA, NA, NA, NA, -0.199773163, -0.160658493, -0.157480637, -0…
$ slope_upr &lt;dbl&gt; NA, NA, NA, NA, 0.04491775, 0.10424151, 0.11498936, 0.131953…
$ intercept &lt;dbl&gt; NA, NA, NA, NA, -2.944791, -2.976248, -2.967393, -3.024750, …
$ rsq       &lt;dbl&gt; NA, NA, NA, NA, 0.2423791383, 0.0349643445, 0.0190560342, 0.…
$ time      &lt;dbl&gt; 0.0000000, 0.1666667, 0.3333333, 0.5000000, 0.6666667, 0.833…
$ ln_od     &lt;dbl&gt; -2.928338, -3.036484, -2.884647, -2.969724, -3.097384, -2.93…</code></pre>
</div>
</div>
<p>These growth rates can then be used for downstream analyses, and the method can easily be used over multiple plates and for many different types of data. Finally, you could also filter the regressions by <img src="https://latex.codecogs.com/png.latex?R%5E%7B2%7D"> values, making sure you only kept good fitting regressions. Or do a sensitivity analysis of different sized window sizes to make sure your chosen window is suitable.</p>
<p>How do you get your data off of the OD reader? I have written scripts to collate hundreds of plate readings into a single dataframe in R. Let me know if you would like me to do a blog post on that process! Thanks for reading.</p>


</section>

 ]]></description>
  <category>R</category>
  <category>bacteria</category>
  <guid>https://padpadpadpad.netlify.app/posts/rolling_regression/</guid>
  <pubDate>Fri, 15 Nov 2019 00:00:00 GMT</pubDate>
  <media:content url="https://padpadpadpad.netlify.app/posts/rolling_regression/preview.png" medium="image" type="image/png" height="108" width="144"/>
</item>
<item>
  <title>rStrava and gganimate</title>
  <dc:creator>Daniel Padfield</dc:creator>
  <link>https://padpadpadpad.netlify.app/posts/animate_rstrava/</link>
  <description><![CDATA[ 





<section id="getting-started-with-rstrava" class="level2">
<h2 class="anchored" data-anchor-id="getting-started-with-rstrava">Getting started with rStrava</h2>
<p><strong>rStrava</strong> is an R package that allows you to access data from Strava using the Strava API. Some of the functions of <strong>rStrava</strong> scrape data from the public Strava website but to access your own data you will need a Strava profile and an authentication token. Details on obtaining your unique token can be found on the <a href="https://github.com/fawda123/rStrava"><strong>rStrava</strong></a> GitHub In addition to this key, we use <code>rgbif::elevation()</code> to calculate the elevation of each route. This requires a Google API key which can be created here.</p>
<p>Got a Strava authentication token? Got a Google API key? We are ready to create some animations! To create our animations, we use gganimate that requires ImageMagick to be installed.</p>
</section>
<section id="loading-packages-and-defining-tokens" class="level2">
<h2 class="anchored" data-anchor-id="loading-packages-and-defining-tokens">Loading packages and defining tokens</h2>
<p>First load the packages that are used in the script and our Strava and Google authentication tokens. The <code>app_scope</code> argument in <code>strava_oauth()</code> has to be one of “read” , “read_all”, “profile:read_all”, “profile:write”, “activity:read”, “activity:read_all” or “activity:write”. To access your activities, <code>activity:read_all</code> has to be included.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load packages ####</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rStrava) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># devtools::install_github('fawda123/rStrava')</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(gganimate)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(sp)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggmap)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(raster)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initial setup ####</span></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Strava key</span></span>
<span id="cb1-11">app_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'xxxx'</span></span>
<span id="cb1-12">app_client_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'xxxxx'</span></span>
<span id="cb1-13">app_secret <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"'</span></span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create strava token</span></span>
<span id="cb1-16">my_token <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> httr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">config</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">token =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strava_oauth</span>(app_name, app_client_id, app_secret, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">app_scope =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'read_all,activity:read_all'</span>))</span>
<span id="cb1-17"></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Google elevation API key</span></span>
<span id="cb1-19">GoogleAPI <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'</span></span></code></pre></div>
</div>
<p>A browser window should open at this point saying Authentication complete. Please close this page and return to R. This means everything is going well!</p>
</section>
<section id="download-your-data" class="level2">
<h2 class="anchored" data-anchor-id="download-your-data">Download your data</h2>
<p>We can then download our personal activity data using the <code>rStrava::get_activity_list()</code>. This function needs your strava token and your strava athlete id. For example, my strava id is 2140248.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># download strava data</span></span>
<span id="cb2-2">my_acts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_activity_list</span>(my_token)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(my_acts)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1669</code></pre>
</div>
</div>
<p>This returns a large list of all your previous activities. Mine has 1028 previous entries. If you want to explore your list, you can use <code>View(my_acts)</code> in RStudio which opens the Data Viewer window.</p>
</section>
<section id="compile-your-data-into-tidy-dataframe" class="level2">
<h2 class="anchored" data-anchor-id="compile-your-data-into-tidy-dataframe">Compile your data into “tidy” dataframe</h2>
<p><strong>rStrava</strong> has a function that compiles the information stored in the output of <code>get_activity_list()</code> to a “tidy” dataframe, with one row for each activity. <code>compile_activities()</code> finds all the columns across all activities and returns <code>NA</code> when a column is not present in a given activity. This means that if HR was not measured across all your strava activities, the function will still work!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compile activities into a tidy dataframe</span></span>
<span id="cb4-2">my_acts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">compile_activities</span>(my_acts)</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># have a look at the dataframe</span></span>
<span id="cb4-5">dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(my_acts)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 1,669
Columns: 60
$ achievement_count             &lt;dbl&gt; 5, 9, 12, 0, 0, 1, 11, 1, 23, 3, 2, 0, 0…
$ athlete_count                 &lt;dbl&gt; 1, 1, 2, 1, 1, 1, 1, 1, 51, 1, 1, 1, 1, …
$ athlete.id                    &lt;chr&gt; "2140248", "2140248", "2140248", "214024…
$ athlete.resource_state        &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…
$ average_heartrate             &lt;chr&gt; "127.8", "127.6", "123.8", NA, "127.4", …
$ average_speed                 &lt;dbl&gt; 21.9168, 26.2476, 24.0264, 27.1476, 17.5…
$ average_temp                  &lt;chr&gt; "10", "9", "9", "7", "3", NA, NA, NA, NA…
$ average_watts                 &lt;dbl&gt; 134.7, 156.7, 148.8, 101.1, 138.1, NA, N…
$ comment_count                 &lt;dbl&gt; 1, 14, 0, 0, 0, 3, 0, 0, 3, 0, 0, 0, 2, …
$ commute                       &lt;chr&gt; "FALSE", "FALSE", "FALSE", "FALSE", "FAL…
$ device_watts                  &lt;chr&gt; "FALSE", "FALSE", "FALSE", "FALSE", "FAL…
$ display_hide_heartrate_option &lt;chr&gt; "TRUE", "TRUE", "TRUE", "FALSE", "TRUE",…
$ distance                      &lt;dbl&gt; 22.3615, 27.7074, 42.3477, 5.7089, 5.639…
$ elapsed_time                  &lt;dbl&gt; 3822, 3884, 6656, 757, 1158, 1923, 4469,…
$ elev_high                     &lt;dbl&gt; 73.2, 146.2, 238.6, 118.2, 126.8, 75.9, …
$ elev_low                      &lt;dbl&gt; -0.4, 2.4, 4.6, 12.8, 20.0, 68.3, 45.1, …
$ end_latlng1                   &lt;dbl&gt; 50.15009, 50.00123, 50.15008, 50.15007, …
$ end_latlng2                   &lt;dbl&gt; -5.084491, -5.181100, -5.084519, -5.0845…
$ external_id                   &lt;chr&gt; "garmin_ping_260217768521", "garmin_ping…
$ flagged                       &lt;chr&gt; "FALSE", "FALSE", "FALSE", "FALSE", "FAL…
$ from_accepted_tag             &lt;chr&gt; "FALSE", "FALSE", "FALSE", "FALSE", "FAL…
$ gear_id                       &lt;chr&gt; "b11291030", "b11291030", "b11291030", "…
$ has_heartrate                 &lt;chr&gt; "TRUE", "TRUE", "TRUE", "FALSE", "TRUE",…
$ has_kudoed                    &lt;chr&gt; "FALSE", "FALSE", "FALSE", "FALSE", "FAL…
$ heartrate_opt_out             &lt;chr&gt; "FALSE", "FALSE", "FALSE", "FALSE", "FAL…
$ id                            &lt;dbl&gt; 8566326572, 8541744691, 8531882051, 8527…
$ kilojoules                    &lt;dbl&gt; 494.9, 595.4, 944.1, 76.5, 159.9, NA, NA…
$ kudos_count                   &lt;dbl&gt; 17, 23, 14, 5, 2, 8, 27, 5, 26, 4, 11, 1…
$ location_country              &lt;chr&gt; "United Kingdom", "United Kingdom", "Uni…
$ manual                        &lt;chr&gt; "FALSE", "FALSE", "FALSE", "FALSE", "FAL…
$ map.id                        &lt;chr&gt; "a8566326572", "a8541744691", "a85318820…
$ map.resource_state            &lt;dbl&gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2…
$ map.summary_polyline          &lt;chr&gt; "a|aqHhu_^Uo@KmCOcAWo@kCwDYb@oBlEcDlC}D|…
$ max_heartrate                 &lt;chr&gt; "157", "150", "157", NA, "149", "166", "…
$ max_speed                     &lt;dbl&gt; 57.0096, 58.2696, 66.5136, 58.8420, 41.0…
$ moving_time                   &lt;dbl&gt; 3673, 3800, 6345, 757, 1158, 1878, 4314,…
$ name                          &lt;chr&gt; "Afternoon Ride", "Morning Ride. Fun unt…
$ photo_count                   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…
$ pr_count                      &lt;chr&gt; "0", "1", "8", "0", "0", "0", "7", "0", …
$ private                       &lt;chr&gt; "FALSE", "FALSE", "FALSE", "FALSE", "FAL…
$ resource_state                &lt;dbl&gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2…
$ sport_type                    &lt;chr&gt; "Ride", "Ride", "Ride", "Ride", "Ride", …
$ start_date                    &lt;chr&gt; "2023-02-15T16:04:05Z", "2023-02-11T10:0…
$ start_date_local              &lt;chr&gt; "2023-02-15T16:04:05Z", "2023-02-11T10:0…
$ start_latlng1                 &lt;dbl&gt; 50.15005, 50.15006, 50.14998, 50.17089, …
$ start_latlng2                 &lt;dbl&gt; -5.084534, -5.084494, -5.084516, -5.1274…
$ suffer_score                  &lt;chr&gt; "29", "30", "40", NA, "9", "33", "86", "…
$ timezone                      &lt;chr&gt; "(GMT+00:00) Europe/London", "(GMT+00:00…
$ total_elevation_gain          &lt;dbl&gt; 376.0, 372.0, 601.0, 38.0, 147.0, 15.0, …
$ total_photo_count             &lt;dbl&gt; 2, 3, 0, 0, 0, 0, 3, 0, 3, 0, 3, 0, 5, 3…
$ trainer                       &lt;chr&gt; "FALSE", "FALSE", "FALSE", "FALSE", "FAL…
$ type                          &lt;chr&gt; "Ride", "Ride", "Ride", "Ride", "Ride", …
$ upload_id                     &lt;chr&gt; "9196267205", "9168807862", "9157876592"…
$ upload_id_str                 &lt;chr&gt; "9196267205", "9168807862", "9157876592"…
$ utc_offset                    &lt;chr&gt; "0", "0", "0", "0", "0", "0", "0", "0", …
$ visibility                    &lt;chr&gt; "everyone", "everyone", "everyone", "eve…
$ workout_type                  &lt;chr&gt; "10", "10", NA, NA, NA, NA, "0", NA, "0"…
$ average_cadence               &lt;chr&gt; NA, NA, NA, NA, NA, "79.5", "81.3", "80.…
$ location_city                 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …
$ location_state                &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …</code></pre>
</div>
</div>
<p>There are so many columns here, so I remove some columns I am not interested in for this post and do some data transformations to get the date in a correct format. I also do not want to run the example on all my rides, instead I filter them for just 2020.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># columns to keep</span></span>
<span id="cb6-2">desired_columns <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'distance'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'elapsed_time'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'moving_time'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start_date'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'start_date_local'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'type'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'map.summary_polyline'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'location_city'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upload_id'</span>)</span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># keep only desired columns</span></span>
<span id="cb6-5">my_acts2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(my_acts, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">any_of</span>(desired_columns))</span>
<span id="cb6-6"></span>
<span id="cb6-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># transformations ####</span></span>
<span id="cb6-8">my_acts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(my_acts,</span>
<span id="cb6-9">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">activity_no =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb6-10">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">elapsed_time =</span> elapsed_time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>,</span>
<span id="cb6-11">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">moving_time =</span> moving_time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, </span>
<span id="cb6-12">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T.*$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>, start_date) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-13">                    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.POSIXct</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y-%m-%d'</span>),</span>
<span id="cb6-14">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">EUdate =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%d/%m/%Y'</span>),</span>
<span id="cb6-15">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">month =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%m"</span>),</span>
<span id="cb6-16">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%d"</span>),</span>
<span id="cb6-17">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(., <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(month, day), as.numeric)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(.,year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020'</span>)</span></code></pre></div>
</div>
</section>
<section id="get-latitude-and-longitude-for-each-activity" class="level2">
<h2 class="anchored" data-anchor-id="get-latitude-and-longitude-for-each-activity">Get latitude and longitude for each activity</h2>
<p>Each activity has a bunch of data associated with it. For mapping, I am interested in the <code>map.summary_polyline</code>, which is a Google polyline which allows the encoding of multiple latitude and longitude points as a single string. We can get the latitude and longitude for each of the activities by using <code>get_latlon()</code> which decodes the polylines and using dplyr and purrr to iterate over every activity in the dataframe. I add my Google API key as a column so that <code>map()</code> can easily find it.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get lat lon and distance of every ride ####</span></span>
<span id="cb7-2">lat_lon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> my_acts <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(map.summary_polyline)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Ride'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> GoogleAPI) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(activity_no) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nest</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coords =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(data, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_latlon</span>(.<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>map.summary_polyline, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> .<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>key)),</span>
<span id="cb7-9">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(coords, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_dists</span>(.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lon, .x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lat))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(., data) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(., <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(coords, dist))</span></code></pre></div>
</div>
<p>Having got the latitude and longitude for every ride, we can now get the elevation of each point and then calculate the gradient between points. To do this I use <code>elevation()</code> in the R package <strong>rgbif</strong>. To use this, you need to get a GeoNames username by registering for an account at <a href="http://www.geonames.org/login">http://www.geonames.org/login</a>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get elevation and calculate gradient between points</span></span>
<span id="cb8-2">lat_lon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>(lat_lon) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ele =</span> rgbif<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">elevation</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">latitude =</span> .<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">longitude =</span> .<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">user =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'YOUR USERNAME HERE'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'srtm1'</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>elevation_geonames)</span>
<span id="cb8-4"></span>
<span id="cb8-5">lat_lon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(lat_lon, activity_no) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ele_diff =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diff</span>(ele)),</span>
<span id="cb8-7">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist_diff =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diff</span>(dist)),</span>
<span id="cb8-8">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">grad =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, (ele_diff[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>dist_diff[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()])) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-10">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(., <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(ele_diff, dist_diff))</span></code></pre></div>
</div>
<p>This now gives us a data frame of all my rides from 2020 with the latitude, longitude, cumulative distance, elevation and gradient. It would now be super easy to create elevation profiles, but I will save that for another post.</p>
</section>
<section id="create-a-gif-of-a-single-ride" class="level2">
<h2 class="anchored" data-anchor-id="create-a-gif-of-a-single-ride">Create a gif of a single ride</h2>
<p>We now have almost all the components to create a gif of a single ride.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">lat_lon_single <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(lat_lon, activity_no <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(activity_no))</span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(lat_lon_single)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 343</code></pre>
</div>
</div>
<p>However, Google polylines do not give a consistent number of latitude and longitude points. This means it might be hard to get a smooth elevation profile for the ride and also for smooth transitions in a gif. To create a set number of points from the current polyline, we can use geospatial packages such as <strong>sp</strong> and <strong>raster</strong> to interpolate a desired number of points from the current ones. Here I create 250 points.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reorder columns so lat lon are first</span></span>
<span id="cb11-2">lat_lon_single <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(lat_lon_single, lat, lon, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>())</span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make new data with by interpolation</span></span>
<span id="cb11-5">interp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> raster<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spLines</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(lat_lon_single[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-6">  sp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spsample</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'regular'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_dists</span>(lon, lat),</span>
<span id="cb11-9">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ele =</span> rgbif<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">elevation</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">latitude =</span> .<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">longitude =</span> .<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">user =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'padpadpadpad'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'srtm1'</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>elevation_geoname,</span>
<span id="cb11-10">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ele_diff =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diff</span>(ele)),</span>
<span id="cb11-11">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist_diff =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diff</span>(dist)),</span>
<span id="cb11-12">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">grad =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, (ele_diff[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>dist_diff[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()]),</span>
<span id="cb11-13">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>())</span></code></pre></div>
</div>
<p>We can now put the gif together, using <strong>ggmap</strong> and <strong>ggplot2</strong>. We use <strong>gganimate</strong> to make the plot animated.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make bbox</span></span>
<span id="cb12-2">bbox <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ggmap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_bbox</span>(lon, lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> lat_lon_single, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">f =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3</span>)</span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># download map</span></span>
<span id="cb12-5">map <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_map</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">location =</span> bbox, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">source =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'google'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">maptype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'terrain'</span>)</span>
<span id="cb12-6"></span>
<span id="cb12-7">single_ride <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggmap</span>(map, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">darken =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_path</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lat,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> grad, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> interp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_distiller</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Gradient (%)'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Spectral'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-12">  ggforce<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_no_axes</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transition_reveal</span>(dist)</span>
<span id="cb12-14"></span>
<span id="cb12-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># animate plot</span></span>
<span id="cb12-16">gganimate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anim_save</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'where_to_save.gif'</span>, single_ride, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">700</span>)</span></code></pre></div>
</div>
<p>The output of this code can be seen below.</p>
<p><img src="https://padpadpadpad.netlify.app/posts/animate_rstrava/single_ride.gif" class="img-fluid"></p>
</section>
<section id="create-a-gif-of-all-the-rides" class="level2">
<h2 class="anchored" data-anchor-id="create-a-gif-of-all-the-rides">Create a gif of ALL the rides</h2>
<p>We can also make a gif of multiple activities. I will filter my activities to only be bike rides over 15km.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get a bbox for Cornwall</span></span>
<span id="cb13-2">bbox <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ggmap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_bbox</span>(lat_lon_single<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lon, lat_lon_single<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">f =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>)</span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add column for frame and total distance per ride</span></span>
<span id="cb13-5">lat_lon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(lat_lon, activity_no) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(),</span>
<span id="cb13-7">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tot_dist =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(distance)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span>
<span id="cb13-9"></span>
<span id="cb13-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># filter lat_lon for when points are within this</span></span>
<span id="cb13-11">lat_lon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(lat_lon, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">between</span>(start_longitude, bbox[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], bbox[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">between</span>(start_latitude, bbox[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], bbox[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Ride'</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> tot_dist <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)</span>
<span id="cb13-12"></span>
<span id="cb13-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add column for frame</span></span>
<span id="cb13-14">lat_lon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(lat_lon, activity_no) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span>
<span id="cb13-17"></span>
<span id="cb13-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make bbox again</span></span>
<span id="cb13-19">bbox <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ggmap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_bbox</span>(lon, lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> lat_lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">f =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb13-20"></span>
<span id="cb13-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># download map</span></span>
<span id="cb13-22">map <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_map</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">location =</span> bbox, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">source =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'google'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">maptype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'terrain'</span>)</span>
<span id="cb13-23"></span>
<span id="cb13-24">all_the_rides <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggmap</span>(map, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">darken =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_path</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> activity_no), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> lat_lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'All the rides'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-28">  ggforce<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_no_axes</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transition_reveal</span>(n)</span>
<span id="cb13-31"></span>
<span id="cb13-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># animate plot</span></span>
<span id="cb13-33">gganimate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anim_save</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'where_to_save.gif'</span>, all_the_rides, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">750</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">700</span>)</span></code></pre></div>
</div>
<p><img src="https://padpadpadpad.netlify.app/posts/animate_rstrava/all_the_rides.gif" class="img-fluid"></p>
<p>And there we have it. A relatively simple way to animate your strava activities in R. I personally find that saving the output as .mp4 rather than .gif gives smaller and higher quality files when uploading them to Instagram, but these options are easy to change. Take back your own data and get plotting!</p>
<p>There are loads of other functions and uses for the <strong>rStrava</strong> package. I hope to blog more about them soon.</p>


</section>

 ]]></description>
  <category>R</category>
  <category>strava</category>
  <category>gganimate</category>
  <guid>https://padpadpadpad.netlify.app/posts/animate_rstrava/</guid>
  <pubDate>Thu, 17 May 2018 23:00:00 GMT</pubDate>
  <media:content url="https://padpadpadpad.netlify.app/posts/animate_rstrava/preview.png" medium="image" type="image/png" height="130" width="144"/>
</item>
<item>
  <title>Bootstrap nls models in R</title>
  <dc:creator>Daniel Padfield</dc:creator>
  <link>https://padpadpadpad.netlify.app/posts/bootstrap_nls/</link>
  <description><![CDATA[ 





<p><em>This post was updated to reflect the improvement of using car to bootstrap nonlinear regressions.</em></p>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>For my first academic publication, a reviewer asked for the <img src="https://latex.codecogs.com/png.latex?r%5E%7B2%7D"> values of the thermal performance curves I fitted using non-linear regression. I bowed to the request as is often the case with reviewer comments, but would now resist as the <img src="https://latex.codecogs.com/png.latex?r%5E%7B2%7D"> is not necessarily an effective goodness of fit measure for non-linear regression (see this <a href="https://stackoverflow.com/questions/14530770/calculating-r2-for-a-nonlinear-model">SO answer</a>). It does raise the question of how to determine how well a biologically meaningful model fits the data it is fitted to. I generally just plot every curve to its data, but it tells me nothing of the uncertainty around the curve.</p>
<p>Step forward the bootstrap! (Non-parametric) bootstrapping is a robust way of computing parameter and model prediction confidence intervals. Bootstrapping involves simulating “new” datasets produced from either the original data (case resampling) or from the original model (residual resampling).</p>
<p>The same model is then fitted separately on each individual bootstrapped dataset. Doing this over and over allows us to visualise uncertainty of predictions and produce confidence intervals of estimated parameters. When previously implementing this, I used methods similar to previous blog posts by <a href="https://rstudio-pubs-static.s3.amazonaws.com/19698_a4c472606e3c43e4b94720506e49bb7b.html">Andrew MacDonald</a> and <a href="https://github.com/tidyverse/dplyr/issues/269">Hadley Wickham</a>, as well as a <a href="https://cran.r-project.org/web/packages/broom/vignettes/bootstrapping.html">broom vignette</a>.</p>
<p>However, I have since applied a more efficient method using the package <strong>car</strong>, which contains the function <code>Boot()</code> that provides a wrapper for the widely used function <code>boot::boot()</code> that is tailored to bootstrapping regression models.</p>
</section>
<section id="case-resampling-resampling-the-original-data-with-replacement" class="level2">
<h2 class="anchored" data-anchor-id="case-resampling-resampling-the-original-data-with-replacement">Case resampling: Resampling the original data with replacement</h2>
<p>Bootstrapping using case resampling involves simulating “new” datasets produced from the existing data by sampling with replacement.</p>
<section id="case-resampling-when-it-works" class="level4">
<h4 class="anchored" data-anchor-id="case-resampling-when-it-works">Case resampling: When it works</h4>
<p>We will demonstrate an example of when this case resampling approach works using data from a recent paper by Padfield <em>et al.</em> (2020), that measures the thermal performance of the bacteria, <em>Pseudomonas fluorescens</em>, in the presence and absence of its phage, <img src="https://latex.codecogs.com/png.latex?%5Cphi%202">. In this study, each single growth rate estimate is a technical replicate. As such, all the data points within each phage treatment can be used to estimate the same curve. The data is in the R package <a href="https://padpadpadpad.github.io/rTPC/index.html"><strong>rTPC</strong></a> and we can visualise one of the curves using <strong>ggplot2</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load packages</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(boot)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(car)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rTPC) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#remotes::install_github('padpadpadpad/rTPC')</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(nls.multstart)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(broom)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(minpack.lm)</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load in data</span></span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bacteria_tpc"</span>)</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># keep just a single curve</span></span>
<span id="cb1-15">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(bacteria_tpc, phage <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nophage'</span>)</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># show the data</span></span>
<span id="cb1-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(d, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, rate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature (ºC)'</span>,</span>
<span id="cb1-22">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Growth rate'</span>,</span>
<span id="cb1-23">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Growth rate across temperatures'</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/bootstrap_nls/index_files/figure-html/setup-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>As in the study, we can fit the Sharpe-Schoolfield model to the data. I take advantage of the packages <strong>nls.mulstart</strong> and <strong>rTPC</strong> to do this.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fit Sharpe-Schoolfield model</span></span>
<span id="cb2-2">d_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nest</span>(d, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(temp, rate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sharpeschoolhigh =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(data, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nls_multstart</span>(rate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sharpeschoolhigh_1981</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp =</span> temp, r_tref,e,eh,th, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tref =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>),</span>
<span id="cb2-4">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> .x,</span>
<span id="cb2-5">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>),</span>
<span id="cb2-6">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">start_lower =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_start_vals</span>(.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp, .x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sharpeschoolhigh_1981'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb2-7">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">start_upper =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_start_vals</span>(.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp, .x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sharpeschoolhigh_1981'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb2-8">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_lower_lims</span>(.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp, .x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sharpeschoolhigh_1981'</span>),</span>
<span id="cb2-9">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">upper =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_upper_lims</span>(.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp, .x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sharpeschoolhigh_1981'</span>),</span>
<span id="cb2-10">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">supp_errors =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y'</span>,</span>
<span id="cb2-11">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">convergence_count =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)),</span>
<span id="cb2-12">         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create new temperature data</span></span>
<span id="cb2-13">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(data, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))),</span>
<span id="cb2-14">         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predict over that data,</span></span>
<span id="cb2-15">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">preds =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map2</span>(sharpeschoolhigh, new_data, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">augment</span>(.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> .y)))</span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># unnest predictions</span></span>
<span id="cb2-18">d_preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(d_fit, preds) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(preds)</span>
<span id="cb2-20"></span>
<span id="cb2-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot data and predictions</span></span>
<span id="cb2-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, .fitted), d_preds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, rate), d, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature (ºC)'</span>,</span>
<span id="cb2-27">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Growth rate'</span>,</span>
<span id="cb2-28">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Growth rate across temperatures'</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/bootstrap_nls/index_files/figure-html/fit_and_plot-1.png" class="img-fluid figure-img" width="576"></p>
</figure>
</div>
</div>
</div>
<p><code>nls_multstart()</code> is designed to fit models across a wide possible parameter space, but as it samples multiple start parameters for each model, using it with bootstrapping becomes computationally expensive. Instead, we refit the model using <strong>minpack.lm::nlsLM()</strong>, using the coefficients of <code>nls_multstart()</code> as the start values. The <strong>Boot()</strong> function then refits the model 999 times and stores the model coefficients.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># refit model using nlsLM</span></span>
<span id="cb3-2">fit_nlsLM <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> minpack.lm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nlsLM</span>(rate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sharpeschoolhigh_1981</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp =</span> temp, r_tref,e,eh,th, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tref =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>),</span>
<span id="cb3-3">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d,</span>
<span id="cb3-4">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">start =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(d_fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sharpeschoolhigh[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]),</span>
<span id="cb3-5">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_lower_lims</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp, d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sharpeschoolhigh_1981'</span>),</span>
<span id="cb3-6">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">upper =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_upper_lims</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp, d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sharpeschoolhigh_1981'</span>),</span>
<span id="cb3-7">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">weights =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(d)))</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bootstrap using case resampling</span></span>
<span id="cb3-10">boot1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Boot</span>(fit_nlsLM, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'case'</span>)</span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># look at the data</span></span>
<span id="cb3-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(boot1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>t)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>        r_tref         e       eh       th
[1,] 0.2387067 0.9452492 2.367318 29.24874
[2,] 0.2511824 0.7655751 2.547971 31.27085
[3,] 0.3173423 0.7499641 2.081992 29.59478
[4,] 0.2586626 0.7592931 2.564117 31.18532
[5,] 0.2871170 0.6627851 2.483048 31.94504
[6,] 0.2434468 0.8695365 2.432169 30.15619</code></pre>
</div>
</div>
<p>The parameters of each bootstrapped refit are returned. All methods that are available for <code>boot()</code> and <code>Boot()</code> are supported for these objects. This includes the <code>hist.boot()</code> function which looks at the distribution of each parameter.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(boot1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">layout =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/bootstrap_nls/index_files/figure-html/hist_boot-1.png" class="img-fluid figure-img" width="768"></p>
</figure>
</div>
</div>
</div>
<p>We can easily create predictions for each of these models and through this confidence intervals around the original fitted predictions. We can then plot (1) the bootstrapped fits and (2) the confidence regions around the model predictions.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create predictions of each bootstrapped model</span></span>
<span id="cb6-2">boot1_preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> boot1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>t <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drop_na</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by_all</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sharpeschoolhigh_1981</span>(temp, r_tref, e, eh, th, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tref =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>))</span>
<span id="cb6-10"></span>
<span id="cb6-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculate bootstrapped confidence intervals</span></span>
<span id="cb6-12">boot1_conf_preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(boot1_preds, temp) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf_lower =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(pred, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>),</span>
<span id="cb6-14">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf_upper =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(pred, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>),</span>
<span id="cb6-15">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'drop'</span>)</span>
<span id="cb6-16"></span>
<span id="cb6-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot bootstrapped CIs</span></span>
<span id="cb6-18">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, .fitted), d_preds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> conf_lower, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> conf_upper), boot1_conf_preds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, rate), d, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature (ºC)'</span>,</span>
<span id="cb6-24">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Growth rate'</span>,</span>
<span id="cb6-25">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Growth rate across temperatures'</span>)</span>
<span id="cb6-26"></span>
<span id="cb6-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot bootstrapped predictions</span></span>
<span id="cb6-28">p2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, .fitted), d_preds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, pred, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> iter), boot1_preds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.007</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, rate), d, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature (ºC)'</span>,</span>
<span id="cb6-34">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Growth rate'</span>,</span>
<span id="cb6-35">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Growth rate across temperatures'</span>)</span>
<span id="cb6-36"></span>
<span id="cb6-37">p1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p2</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/bootstrap_nls/index_files/figure-html/plot_boots-1.png" class="img-fluid figure-img" width="768"></p>
</figure>
</div>
</div>
</div>
<p>This method works well here, because there are many points beyond the peak of the curve and multiple independent points at each temperature.</p>
</section>
<section id="case-resampling-when-it-struggles" class="level4">
<h4 class="anchored" data-anchor-id="case-resampling-when-it-struggles">Case resampling: When it struggles</h4>
<p>This method becomes more problematic when there is a small sample size and the coverage of temperature values beyond the optimum temperature is small. This means that many of the bootstrapped datasets will not have any points beyond the optimum, which is problematic for mathematical models that expect a unimodal shape. The effect of this can be seen by case resampling a curve from the <code>chlorella_tpc</code> dataset also in <strong>rTPC</strong>. Here we again fit the model using <code>nls_multstart()</code>, refit the model using <code>nlsLM()</code>, then bootstrap the model using <code>Boot()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load in chlorella data</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chlorella_tpc'</span>) </span>
<span id="cb7-3"></span>
<span id="cb7-4">d2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(chlorella_tpc, curve_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-5"></span>
<span id="cb7-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fit Sharpe-Schoolfield model to raw data</span></span>
<span id="cb7-7">d_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nest</span>(d2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(temp, rate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sharpeschoolhigh =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(data, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nls_multstart</span>(rate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sharpeschoolhigh_1981</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp =</span> temp, r_tref,e,eh,th, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tref =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>),</span>
<span id="cb7-9">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> .x,</span>
<span id="cb7-10">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>),</span>
<span id="cb7-11">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">start_lower =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_start_vals</span>(.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp, .x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sharpeschoolhigh_1981'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb7-12">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">start_upper =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_start_vals</span>(.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp, .x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sharpeschoolhigh_1981'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb7-13">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_lower_lims</span>(.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp, .x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sharpeschoolhigh_1981'</span>),</span>
<span id="cb7-14">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">upper =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_upper_lims</span>(.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp, .x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sharpeschoolhigh_1981'</span>),</span>
<span id="cb7-15">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">supp_errors =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y'</span>,</span>
<span id="cb7-16">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">convergence_count =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)),</span>
<span id="cb7-17">         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create new temperature data</span></span>
<span id="cb7-18">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(data, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(.x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))),</span>
<span id="cb7-19">         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predict over that data,</span></span>
<span id="cb7-20">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">preds =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map2</span>(sharpeschoolhigh, new_data, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">augment</span>(.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> .y)))</span>
<span id="cb7-21"></span>
<span id="cb7-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># refit model using nlsLM</span></span>
<span id="cb7-23">fit_nlsLM2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nlsLM</span>(rate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sharpeschoolhigh_1981</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp =</span> temp, r_tref,e,eh,th, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tref =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>),</span>
<span id="cb7-24">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d2,</span>
<span id="cb7-25">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">start =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(d_fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sharpeschoolhigh[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]),</span>
<span id="cb7-26">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_lower_lims</span>(d2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp, d2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sharpeschoolhigh_1981'</span>),</span>
<span id="cb7-27">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">upper =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_upper_lims</span>(d2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp, d2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sharpeschoolhigh_1981'</span>),</span>
<span id="cb7-28">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">control =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nls.lm.control</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">maxiter=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>),</span>
<span id="cb7-29">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">weights =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(d2)))</span>
<span id="cb7-30"></span>
<span id="cb7-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bootstrap using case resampling</span></span>
<span id="cb7-32">boot2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Boot</span>(fit_nlsLM2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'case'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
 Number of bootstraps was 995 out of 999 attempted </code></pre>
</div>
</div>
<p>We can then create predictions for each bootstrapped model and calculate 95% confidence intervals around the predictions. Models that don’t fit and return <code>NA</code> for the parameter estimates are dropped.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># unnest predictions of original model fit</span></span>
<span id="cb9-2">d_preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(d_fit, preds) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(preds)</span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predict over new data</span></span>
<span id="cb9-6">boot2_preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> boot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>t <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drop_na</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by_all</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(d2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(d2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sharpeschoolhigh_1981</span>(temp, r_tref, e, eh, th, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tref =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>))</span>
<span id="cb9-14"></span>
<span id="cb9-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculate bootstrapped confidence intervals</span></span>
<span id="cb9-16">boot2_conf_preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(boot2_preds, temp) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf_lower =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(pred, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>),</span>
<span id="cb9-18">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf_upper =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(pred, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>),</span>
<span id="cb9-19">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'drop'</span>)</span>
<span id="cb9-20"></span>
<span id="cb9-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot bootstrapped CIs</span></span>
<span id="cb9-22">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, .fitted), d_preds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> conf_lower, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> conf_upper), boot2_conf_preds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, rate), d2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature (ºC)'</span>,</span>
<span id="cb9-28">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Growth rate'</span>,</span>
<span id="cb9-29">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Growth rate across temperatures'</span>)</span>
<span id="cb9-30"></span>
<span id="cb9-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot bootstrapped predictions</span></span>
<span id="cb9-32">p2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, .fitted), d_preds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, pred, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> iter), boot2_preds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.007</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, rate), d2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature (ºC)'</span>,</span>
<span id="cb9-38">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Growth rate'</span>,</span>
<span id="cb9-39">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Growth rate across temperatures'</span>)</span>
<span id="cb9-40"></span>
<span id="cb9-41">p1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p2</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/bootstrap_nls/index_files/figure-html/bootstrap_case2_plot-1.png" class="img-fluid figure-img" width="768"></p>
</figure>
</div>
</div>
</div>
<p>As can be seen, bootstrapping-with-replacement with only a single point at each temperature can lead to a large variety of fits. In the second panel, we can see the variation of the curve fits, clustering around 4 possible paths for the decrease in rate beyond the optimum temperature. This occurs because in many instances there are no points sampled at the very high temperatures, leading to this clustering in curve fits.</p>
</section>
</section>
<section id="residual-resampling" class="level2">
<h2 class="anchored" data-anchor-id="residual-resampling">Residual resampling</h2>
<p>Case resampling is the most common way of thinking about bootstrapping. However, bootstrapping ordinary least squares regression models is often done using bootstrapping residuals. This method - where the values of the predictors in a study remain fixed during resampling - is especially useful in a designed experiment where the values of the predictors are set by the experimenter.</p>
<p>Re-sampling residuals, at its heart, follows a simple set of steps:</p>
<ol type="1">
<li>Fit the model and for each data point, <img src="https://latex.codecogs.com/png.latex?i">, retain the fitted values <img src="https://latex.codecogs.com/png.latex?%5Chat%7By_%7Bi%7D%7D"> and the residuals, <img src="https://latex.codecogs.com/png.latex?%5Chat%7Be_%7Bi%7D%7D%20=%20y_%7Bi%7D%20-%20%5Chat%7By_%7Bi%7D%7D"></li>
<li>For each data pair, (<img src="https://latex.codecogs.com/png.latex?x_i">, <img src="https://latex.codecogs.com/png.latex?y_i">), where <img src="https://latex.codecogs.com/png.latex?x_i"> is the measured temperature value, we add a randomly re-sampled residual, <img src="https://latex.codecogs.com/png.latex?%5Chat%7Be%7D"> to the fitted value <img src="https://latex.codecogs.com/png.latex?%5Chat%7By_i%7D">. This becomes the new <img src="https://latex.codecogs.com/png.latex?y_i"> value, such that <img src="https://latex.codecogs.com/png.latex?y_i%20=%20%5Chat%7By_i%7D%20+%20%5Chat%7Be%7D">. The new response variable is created based on the random re-allocation of the variation around the original model fit</li>
<li>The model is refit using the newly created <img src="https://latex.codecogs.com/png.latex?y_i"> response variable</li>
<li>Repeat steps 2 and 3 a number of times</li>
</ol>
<p>This method makes the assumption that the original model fit is a good representation of the data, and that the error terms in the model are normally distributed and independent. If the model is incorrectly specified – for example, if there is unmodelled non-linearity, non-constant error variance, or outliers – these characteristics will not carry over into the re-sampled data sets.</p>
<p><strong>car::Boot()</strong> has an argument that allows us to easily implement residual resampling instead of case resampling, by setting <code>method = 'residual'</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bootstrap using residual resampling</span></span>
<span id="cb10-2">boot3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Boot</span>(fit_nlsLM2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'residual'</span>)</span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># predict over new data</span></span>
<span id="cb10-5">boot3_preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> boot3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>t <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drop_na</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by_all</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(d2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(d2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>temp), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pred =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sharpeschoolhigh_1981</span>(temp, r_tref, e, eh, th, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tref =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>))</span>
<span id="cb10-13"></span>
<span id="cb10-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculate bootstrapped confidence intervals</span></span>
<span id="cb10-15">boot3_conf_preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(boot3_preds, temp) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf_lower =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(pred, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.025</span>),</span>
<span id="cb10-17">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf_upper =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(pred, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.975</span>),</span>
<span id="cb10-18">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'drop'</span>)</span>
<span id="cb10-19"></span>
<span id="cb10-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot bootstrapped CIs</span></span>
<span id="cb10-21">p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, .fitted), d_preds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> conf_lower, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> conf_upper), boot3_conf_preds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, rate), d2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature (ºC)'</span>,</span>
<span id="cb10-27">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Growth rate'</span>,</span>
<span id="cb10-28">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Growth rate across temperatures'</span>)</span>
<span id="cb10-29"></span>
<span id="cb10-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot bootstrapped predictions</span></span>
<span id="cb10-31">p2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, .fitted), d_preds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, pred, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> iter), boot3_preds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.007</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(temp, rate), d2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature (ºC)'</span>,</span>
<span id="cb10-37">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Growth rate'</span>,</span>
<span id="cb10-38">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Growth rate across temperatures'</span>)</span>
<span id="cb10-39"></span>
<span id="cb10-40">p1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p2</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/bootstrap_nls/index_files/figure-html/residual_resample_data-1.png" class="img-fluid figure-img" width="768"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="calculating-confidence-intervals-of-estimated-parameters" class="level2">
<h2 class="anchored" data-anchor-id="calculating-confidence-intervals-of-estimated-parameters">Calculating confidence intervals of estimated parameters</h2>
<p>Bootstrapping can be used to estimate confidence intervals of the parameters explicitly modelled in the regression. We can compare these approaches to profiled confidence intervals (using <strong>confint-MASS</strong>) and asymptotic confidence intervals (using <strong>nlstools::confint2()</strong>). For the bootstrapped parameter distributions, <strong>confint.boot()</strong> supports the calculation of BCa, basic, normal, and percentile confidence intervals. We use BCa here, and we will calculate all CIs on the two models done previously in this vignette. First with the bacteria TPC.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># First for the bacteria</span></span>
<span id="cb11-2"></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get parameters of fitted model</span></span>
<span id="cb11-4">param_bact <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> broom<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(fit_nlsLM) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">param =</span> term, estimate)</span>
<span id="cb11-6"></span>
<span id="cb11-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculate confidence intervals of models</span></span>
<span id="cb11-8">ci_bact1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> nlstools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">confint2</span>(fit_nlsLM, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'asymptotic'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf_lower =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf_upper =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'param'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'asymptotic'</span>)</span>
<span id="cb11-13">ci_bact2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">confint</span>(fit_nlsLM) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf_lower =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf_upper =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'param'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'profile'</span>)</span>
<span id="cb11-18"></span>
<span id="cb11-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CIs from case resampling</span></span>
<span id="cb11-20">ci_bact3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">confint</span>(boot1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bca'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf_lower =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf_upper =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'param'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'case bootstrap'</span>)</span>
<span id="cb11-25"></span>
<span id="cb11-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CIs from residual resampling</span></span>
<span id="cb11-27">ci_bact4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Boot</span>(fit_nlsLM, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'residual'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">confint</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bca'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf_lower =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf_upper =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames_to_column</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'param'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'residual bootstrap'</span>)</span>
<span id="cb11-33"></span>
<span id="cb11-34">ci_bact <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(ci_bact1, ci_bact2, ci_bact3, ci_bact4) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(., param_bact)</span>
<span id="cb11-36"></span>
<span id="cb11-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot</span></span>
<span id="cb11-38"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(ci_bact, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(forcats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fct_relevel</span>(method, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'profile'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'asymptotic'</span>)), estimate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> method)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> conf_lower), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(ci_bact, method <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'profile'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> conf_upper), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(ci_bact, method <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'profile'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_linerange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> conf_lower, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> conf_upper)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-44">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>param, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'free'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-45">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_discrete</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_wrap</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Calculation of confidence intervals for model parameters'</span>,</span>
<span id="cb11-47">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'For the bacteria TPC; dashed lines are CI of profiling method'</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/bootstrap_nls/index_files/figure-html/confint_bact-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Each panel is a different explicitly modelled parameter. The dashed lines represent the 95% intervals for the profiling method. In general, the different bootstrap methods are similar to the profiled intervals, but not all parameters are the same. For example, <code>r_tref</code> and <code>e</code> give wider (and asymmetric) confidence intervals using the case resampling method. The residual method gives estimates that are more similar to those calculated from profiling.</p>
</section>
<section id="calculate-confidence-intervals-of-generated-parameters" class="level2">
<h2 class="anchored" data-anchor-id="calculate-confidence-intervals-of-generated-parameters">Calculate confidence intervals of generated parameters</h2>
<p>Crucially, bootstrapping allows the calculation of confidence intervals for parameters derived from the model that were not present in the initial fitting process. For example, the optimum temperature of a thermal performance curve, <img src="https://latex.codecogs.com/png.latex?T_%7Bopt%7D"> is calculated as:</p>
<p><img src="https://latex.codecogs.com/png.latex?T_%7Bopt%7D%20=%20%5Cfrac%7BE_%7Bh%7DT_%7Bh%7D%7D%7BE_%7Bh%7D%20+%20k%20T_%7Bh%7D%20ln(%5Cfrac%7BE_%7Bh%7D%7D%7BE%7D%20-%201)%7D"> We can calculate <img src="https://latex.codecogs.com/png.latex?T_%7Bopt%7D"> by writing a custom function that we feed into <code>Boot()</code>. We will do this using the case resampling approach for the first curve in this blog post.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">get_topt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(model){</span>
<span id="cb12-2">  coefs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(model)</span>
<span id="cb12-3">  </span>
<span id="cb12-4">  e <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> coefs[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(coefs) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'e'</span>]</span>
<span id="cb12-5">  eh <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> coefs[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(coefs) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'eh'</span>]</span>
<span id="cb12-6">  th <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> coefs[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(coefs) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'th'</span>]</span>
<span id="cb12-7">  </span>
<span id="cb12-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(((eh<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(th <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">273.15</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(eh <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.62e-05</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(th <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">273.15</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>((eh<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>e) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">273.15</span>)</span>
<span id="cb12-9">}</span>
<span id="cb12-10"></span>
<span id="cb12-11">topt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Boot</span>(fit_nlsLM, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">f =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x){<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_topt</span>(x)}, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'topt'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">R =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">999</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'case'</span>)</span>
<span id="cb12-12"></span>
<span id="cb12-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(topt, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/bootstrap_nls/index_files/figure-html/ci_calc_param-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>This approach of using <strong>purrr</strong>, <strong>nls.multstart</strong>, and <strong>car</strong> can easily be scaled up to multiple curves.</p>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<ul>
<li>Padfield, D., Castledine, M., &amp; Buckling, A. (2020). Temperature-dependent changes to host–parasite interactions alter the thermal performance of a bacterial host. The ISME Journal, 14(2), 389-398.</li>
</ul>


</section>

 ]]></description>
  <category>R</category>
  <category>nonlinear regression</category>
  <category>car</category>
  <category>tidyverse</category>
  <guid>https://padpadpadpad.netlify.app/posts/bootstrap_nls/</guid>
  <pubDate>Sun, 21 Jan 2018 00:00:00 GMT</pubDate>
  <media:content url="https://padpadpadpad.netlify.app/posts/bootstrap_nls/preview.png" medium="image" type="image/png" height="108" width="144"/>
</item>
<item>
  <title>Doing robust nls regression in R</title>
  <dc:creator>Daniel Padfield</dc:creator>
  <link>https://padpadpadpad.netlify.app/posts/nlsmultstart/</link>
  <description><![CDATA[ 





<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>With my research, I often use non-linear least squares regression to fit a model with biologically meaningful parameters to data. Specifically, I measure the thermal performance of phytoplankon growth, respiration and photosynthesis over a wide range of assay temperatures to see how the organisms are adapted to the temperatures they live at.</p>
<p>These thermal performance curves generally follow a unimodal shape and parameters for which are widely used in climate change research to predict whether organisms will be able to cope with increasing temperatures.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/nlsmultstart/TPC.png" class="img-fluid figure-img"></p>
<figcaption>Example Thermal Performance Curve</figcaption>
</figure>
</div>
<p>These curves can be modelled with a variety of equations, such as the Sharpe-Schoolfield equation, which I have log-transformed here:</p>
<p><img src="https://latex.codecogs.com/png.latex?log(rate)%20=%20lnc%20+%20E(%5Cfrac%7B1%7D%7BT_%7Bc%7D%7D%20-%20%5Cfrac%7B1%7D%7BkT%7D)%20-%20ln(1%20+%20e%5E%7BE_h(%5Cfrac%7B1%7D%7BkT_h%7D%20-%20%5Cfrac%7B1%7D%7BkT%7D)%7D)"> where <img src="https://latex.codecogs.com/png.latex?lnc"> is a normalisation constant at a common temperature, <img src="https://latex.codecogs.com/png.latex?T_%7Bc%7D">, <img src="https://latex.codecogs.com/png.latex?E"> is an activation energy that describes the rate of increase before the optimum temperature, <img src="https://latex.codecogs.com/png.latex?T_%7Bopt%7D">. <img src="https://latex.codecogs.com/png.latex?k"> is Boltzmann’s constant, <img src="https://latex.codecogs.com/png.latex?E_%7Bh%7D"> is the deactivation energy that controls the decline in rate past the optimum temperature and <img src="https://latex.codecogs.com/png.latex?T_%7Bh%7D"> is the temperature where, after the optimu, the rate is half of the maximal rate.</p>
<p>Say I want to fit the same equation to 10, 50, or 100s of these curves. I could loop through a call to <strong>nls()</strong>, <strong>nlsLM()</strong>, or use <strong>nlsList()</strong> from <strong>nlme</strong>. However, non-linear least squares regression in R is sensitive to the start parameters, meaning that different start parameters can give different “best estimated parameters”. This becomes more likely when fitting more curves with only a single set of start parameters, where the variation in estimated parameter values is likely to be much larger. For example, some curves could have much higher rates (<img src="https://latex.codecogs.com/png.latex?lnc">), higher optimum temperatures (i.e.&nbsp;<img src="https://latex.codecogs.com/png.latex?T_%7Bh%7D">) or have different values of temperature-dependence (<img src="https://latex.codecogs.com/png.latex?E">).</p>
<p>To combat this, I wrote an R package which allows for multiple start parameters for non-linear regression. I wrapped this method in an R package called <a href="https://github.com/padpadpadpad/nlsLoop"><strong>nlsLoop</strong></a> and submitted it to The Journal of Open Source Software. Everything was good with the world and I went to a Christmas party.</p>
<p>The next day, I had an epiphany surrounding the redundancies and needless complexities of my R package, withdrew my submission and rewrote the entire package in a weekend to give rise to a single function package, <strong>nls.multstart::nls_multstart()</strong>. Essentially since I first wrote <strong>nlsLoop</strong> ~3 years ago I have realised that <strong>broom</strong> and <strong>purrr</strong> can do what I wrote clunkier functions to achieve. In contrast, <a href="https://github.com/padpadpadpad/nls.multstart"><strong>nls.multstart</strong></a> works perfectly with the tools of the <strong>tidyverse</strong> to fit multiple models.</p>
</section>
<section id="multiple-model-fitting-in-practice" class="level2">
<h2 class="anchored" data-anchor-id="multiple-model-fitting-in-practice">Multiple model fitting in practice</h2>
<p>Load in all packages that are used in this analysis. Packages can be installed from GitHub using <strong>devtools</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load packages</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(nls.multstart)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(broom)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(nlstools)</span></code></pre></div>
</div>
<p>We can then load in the data and have a look at it using <strong>glimpse()</strong>. Here we shall use a dataset of thermal performance curves of metabolism of <em>Chlorella vulgaris</em> from Padfield <em>et al.</em> 2016.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load in example data set</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chlorella_TRC"</span>)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(Chlorella_TRC)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 649
Columns: 7
$ curve_id    &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2…
$ growth.temp &lt;dbl&gt; 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20…
$ process     &lt;chr&gt; "acclimation", "acclimation", "acclimation", "acclimation"…
$ flux        &lt;chr&gt; "respiration", "respiration", "respiration", "respiration"…
$ temp        &lt;dbl&gt; 16, 19, 22, 25, 28, 31, 34, 37, 40, 43, 46, 49, 16, 19, 22…
$ K           &lt;dbl&gt; 289.15, 292.15, 295.15, 298.15, 301.15, 304.15, 307.15, 31…
$ ln.rate     &lt;dbl&gt; -2.06257833, -1.32437939, -0.95416807, -0.79443675, -0.182…</code></pre>
</div>
</div>
<p>Next we define the Sharpe-Schoolfield equation discussed earlier.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define the Sharpe-Schoolfield equation</span></span>
<span id="cb4-2">schoolfield_high <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(lnc, E, Eh, Th, temp, Tc) {</span>
<span id="cb4-3">  Tc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">273.15</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Tc</span>
<span id="cb4-4">  k <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.62e-5</span></span>
<span id="cb4-5">  boltzmann.term <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lnc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(E<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>k<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Tc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>temp)))</span>
<span id="cb4-6">  inactivation.term <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(Eh<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>k<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Th <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>temp))))</span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(boltzmann.term <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> inactivation.term)</span>
<span id="cb4-8">  }</span></code></pre></div>
</div>
<p>There are 60 curves in this dataset, 30 each of photosynthesis and respiration. The treatments are growth temperature (20, 23, 27, 30, 33 ºC) and adaptive process (acclimation or adaptation) that reflects the number of generations cultures were grown at each temperature.</p>
<p>We can see how <strong>nls_multstart()</strong> works by subsetting the data for a single curve.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># subset dataset</span></span>
<span id="cb5-2">d_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(Chlorella_TRC, curve_id <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run nls_multstart</span></span>
<span id="cb5-4">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nls_multstart</span>(ln.rate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">schoolfield_high</span>(lnc, E, Eh, Th, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp =</span> K, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Tc =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>),</span>
<span id="cb5-5">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> d_1,</span>
<span id="cb5-6">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>,</span>
<span id="cb5-7">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">start_lower =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lnc =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">E =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Eh =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Th =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">285</span>),</span>
<span id="cb5-8">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">start_upper =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lnc =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">E =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Eh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Th =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">330</span>),</span>
<span id="cb5-9">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">supp_errors =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y'</span>,</span>
<span id="cb5-10">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.action =</span> na.omit,</span>
<span id="cb5-11">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lnc =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">E =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Eh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Th =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb5-12">fit</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Nonlinear regression model
  model: ln.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 20)
   data: data
     lnc        E       Eh       Th 
 -1.3462   0.9877   4.3326 312.1887 
 residual sum-of-squares: 7.257

Number of iterations to convergence: 15 
Achieved convergence tolerance: 1.49e-08</code></pre>
</div>
</div>
<p><strong>nls_multstart()</strong> allows boundaries for each parameter to be set. A uniform distribution between these values is created and start values for each iteration of the fitting process are then picked randomly. The function returns the best available model by picking the model with the lowest AIC score. Additional info on the function can be found <a href="https://github.com/padpadpadpad/nls.multstart">here</a> or by typing <code>?nls_multstart</code> into the R console.</p>
<p>This fit can then be “tidied” in various ways using the R package <strong>broom</strong>. Each different function in <strong>broom</strong> returns a different set of information. <strong>tidy()</strong> returns the estimated parameters, <strong>augment()</strong> returns the predictions and <strong>glance()</strong> returns information about the model such as the AIC score and whether the model has reached convergence. Confidence intervals of non-linear regression can also be estimated using <strong>nlstools::confint2()</strong></p>
<p>The amazing thing about these tools is the ease at which they can then be used on multiple curves at once, an approach Hadley Wickham has previously <a href="https://blog.rstudio.com/2016/02/02/tidyr-0-4-0/">written about</a>. The approach nests the data based on grouping variables using <strong>nest()</strong>, then creates a list column of the best fit for each curve using <strong>map()</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fit over each set of groupings</span></span>
<span id="cb7-2">fits <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Chlorella_TRC <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(., flux, growth.temp, process, curve_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nest</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fit =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(data, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nls_multstart</span>(ln.rate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">schoolfield_high</span>(lnc, E, Eh, Th, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp =</span> K, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Tc =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>),</span>
<span id="cb7-6">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> .x,</span>
<span id="cb7-7">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">iter =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb7-8">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">start_lower =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lnc =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">E =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Eh =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Th =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">285</span>),</span>
<span id="cb7-9">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">start_upper =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lnc =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">E =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Eh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Th =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">330</span>),</span>
<span id="cb7-10">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">supp_errors =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y'</span>,</span>
<span id="cb7-11">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.action =</span> na.omit,</span>
<span id="cb7-12">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lnc =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">E =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Eh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Th =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))))</span></code></pre></div>
</div>
<p>If you are confused, then you are not alone. This took me a long time to understand and I imagine there are still better ways for me to do it! However, to check it has worked, we can look at a single fit to check it looks ok. We can also look at <code>fits</code> to see that there is now a <code>fit</code> list column containing each of the non-linear fits for each combination of our grouping variables.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># look at a single fit</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(fits<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>fit[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Formula: ln.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 20)

Parameters:
    Estimate Std. Error t value Pr(&gt;|t|)    
lnc  -1.3462     0.4656  -2.891   0.0202 *  
E     0.9877     0.4521   2.185   0.0604 .  
Eh    4.3326     1.4878   2.912   0.0195 *  
Th  312.1887     3.8782  80.499 6.32e-13 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.9524 on 8 degrees of freedom

Number of iterations to convergence: 19 
Achieved convergence tolerance: 1.49e-08</code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># look at output object</span></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(fits, curve_id, data, fit)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Adding missing grouping variables: `flux`, `growth.temp`, `process`</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 60 × 6
# Groups:   flux, growth.temp, process, curve_id [60]
   flux        growth.temp process     curve_id data              fit   
   &lt;chr&gt;             &lt;dbl&gt; &lt;chr&gt;          &lt;dbl&gt; &lt;list&gt;            &lt;list&gt;
 1 respiration          20 acclimation        1 &lt;tibble [12 × 3]&gt; &lt;nls&gt; 
 2 respiration          20 acclimation        2 &lt;tibble [12 × 3]&gt; &lt;nls&gt; 
 3 respiration          23 acclimation        3 &lt;tibble [12 × 3]&gt; &lt;nls&gt; 
 4 respiration          27 acclimation        4 &lt;tibble [9 × 3]&gt;  &lt;nls&gt; 
 5 respiration          27 acclimation        5 &lt;tibble [12 × 3]&gt; &lt;nls&gt; 
 6 respiration          30 acclimation        6 &lt;tibble [12 × 3]&gt; &lt;nls&gt; 
 7 respiration          30 acclimation        7 &lt;tibble [12 × 3]&gt; &lt;nls&gt; 
 8 respiration          33 acclimation        8 &lt;tibble [10 × 3]&gt; &lt;nls&gt; 
 9 respiration          33 acclimation        9 &lt;tibble [8 × 3]&gt;  &lt;nls&gt; 
10 respiration          20 acclimation       10 &lt;tibble [10 × 3]&gt; &lt;nls&gt; 
# … with 50 more rows</code></pre>
</div>
</div>
<p>These fits can be cleaned up using the <strong>broom</strong> functions and <strong>purrr::map()</strong> to iterate over the grouping variables.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get summary info</span></span>
<span id="cb13-2">info <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fits <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">info =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(fit, glance)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(info)</span>
<span id="cb13-5"></span>
<span id="cb13-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get params</span></span>
<span id="cb13-7">params <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fits <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">params =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(fit, tidy)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(params)</span>
<span id="cb13-10">  </span>
<span id="cb13-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get confidence intervals</span></span>
<span id="cb13-12">CI <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fits <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">CI =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(fit, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x)<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">confint2</span>(x)))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(CI) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>data, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>fit) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.low =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">X2.5..</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.high =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">X97.5..</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(., curve_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">term =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lnc'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'E'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Eh'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Th'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span>
<span id="cb13-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># merge parameters and CI estimates</span></span>
<span id="cb13-21">params <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge</span>(params, CI, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">intersect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(params), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(CI)))</span>
<span id="cb13-22"></span>
<span id="cb13-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get predictions</span></span>
<span id="cb13-24">preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fits <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">preds =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(fit, augment)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(preds)</span></code></pre></div>
</div>
<p>Looking at <strong>info</strong> allows us to see if all the models converged.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>(info) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(., curve_id, logLik, AIC, BIC, deviance, df.residual)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 60 × 6
   curve_id  logLik   AIC   BIC deviance df.residual
      &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;int&gt;
 1        1 -14.0   38.0  40.4     7.26            8
 2        2  -1.20  12.4  14.8     0.858           8
 3        3  -7.39  24.8  27.2     2.41            8
 4        4  -0.523 11.0  12.0     0.592           5
 5        5 -10.8   31.7  34.1     4.29            8
 6        6  -8.52  27.0  29.5     2.91            8
 7        7  -1.29  12.6  15.0     0.871           8
 8        8 -13.4   36.7  38.2     8.48            6
 9        9   1.82   6.36  6.76    0.297           4
10       10  -1.27  12.5  14.1     0.755           6
# … with 50 more rows</code></pre>
</div>
</div>
<p>When plotting non-linear fits, I prefer to have a smooth curve, even when there are not many points underlying the fit. This can be achieved by including <code>newdata</code> in the <strong>augment()</strong> function and creating a higher resolution set of predictor values.</p>
<p>However, when predicting for many different fits, it is not certain that each curve has the same range of predictor variables. We can get around this by setting the limits of each prediction by the <strong>min()</strong> and <strong>max()</strong> of the predictor variables.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># new data frame of predictions</span></span>
<span id="cb16-2">new_preds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Chlorella_TRC <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">do</span>(., <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">K =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(.<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>K), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(.<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>K), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stringsAsFactors =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>))</span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># max and min for each curve</span></span>
<span id="cb16-5">max_min <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Chlorella_TRC, curve_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min_K =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(K), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_K =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(K), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'drop'</span>)</span>
<span id="cb16-7"></span>
<span id="cb16-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create new predictions</span></span>
<span id="cb16-9">preds2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fits <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">preds =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(fit, augment, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> new_preds)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(preds) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge</span>(., max_min, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'curve_id'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(., curve_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(., K <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(min_K) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> K <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(max_K)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ln.rate =</span> .fitted) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span></code></pre></div>
</div>
<p>These can then be plotted using <strong>ggplot2</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot</span></span>
<span id="cb17-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(K <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">273.15</span>, ln.rate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> flux), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, Chlorella_TRC) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(K <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">273.15</span>, ln.rate, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> flux, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> curve_id), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, preds2) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> growth.temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> process, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labeller =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labeller</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.multi_line =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_colour_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green4'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Helvetica'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log Metabolic rate'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Assay temperature (ºC)'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span>))</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/nlsmultstart/index_files/figure-html/plot_many_fits-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>The confidence intervals of each parameter for each curve fit can also be easily visualised.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot</span></span>
<span id="cb18-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(params, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> flux)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(curve_id, estimate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> term, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'free_x'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_linerange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(curve_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> conf.low, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> conf.high)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_flip</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green4'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Helvetica'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'top'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'curve'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'parameter estimate'</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://padpadpadpad.netlify.app/posts/nlsmultstart/index_files/figure-html/confint_plot-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>This method of modelling can be used for different data, different non-linear models (and linear models for that matter) and combined with the <strong>tidyverse</strong> can make very useful visualisations.</p>
<p>The next stage of these curve fits is to try and better understand the uncertainty of these curve fits and their predictions. One approach to achieve this could be bootstrapping new datasets from the existing data. I hope to demonstrate how this could be done soon in another post.</p>
</section>
<section id="references" class="level2">
<h2 class="anchored" data-anchor-id="references">References</h2>
<p>[1] Padfield, D., Yvon-durocher, G., Buckling, A., Jennings, S. &amp; Yvon-durocher, G. (2016). Rapid evolution of metabolic traits explains thermal adaptation in phytoplankton. Ecology Letters, 19(2), 133-142.</p>


</section>

 ]]></description>
  <category>R</category>
  <category>nonlinear regression</category>
  <category>tidyverse</category>
  <guid>https://padpadpadpad.netlify.app/posts/nlsmultstart/</guid>
  <pubDate>Sun, 07 Jan 2018 00:00:00 GMT</pubDate>
  <media:content url="https://padpadpadpad.netlify.app/posts/nlsmultstart/preview.png" medium="image" type="image/png" height="108" width="144"/>
</item>
</channel>
</rss>
